{"ast":null,"code":"import _objectSpread from \"/home/mayor/gidiShare2/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/mayor/gidiShare2/frontend/src/screen/ImageDetails.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport ImageCard from '../components/ImageCard';\nimport singleImageThunk from '../redux/action/singleImageThunk';\nimport singleImageFetch from '../redux/action/singleImageThunk';\nimport Loading from '../components/Loading';\nimport Error from '../components/Error';\n\nclass DetailsScreen extends React.Component {\n  componentDidMount() {\n    const matchId = this.props.match.params.id;\n    this.props.dispatch(singleImageFetch(matchId));\n  }\n\n  render() {\n    console.log('refresh');\n    const singleImage = this.props.singleImage;\n\n    const _singleImage = _objectSpread({}, singleImage),\n          loading = _singleImage.loading,\n          error = _singleImage.error;\n\n    if (loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"image-details-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, singleImage.imageUrl);\n  }\n\n}\n\nconst mapPropToState = state => {\n  return {\n    singleImage: state.singleImage\n  };\n};\n\nexport default withRouter(connect(mapPropToState)(DetailsScreen));","map":{"version":3,"sources":["/home/mayor/gidiShare2/frontend/src/screen/ImageDetails.js"],"names":["React","useEffect","connect","withRouter","ImageCard","singleImageThunk","singleImageFetch","Loading","Error","DetailsScreen","Component","componentDidMount","matchId","props","match","params","id","dispatch","render","console","log","singleImage","loading","error","imageUrl","mapPropToState","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,MAAMC,aAAN,SAA4BT,KAAK,CAACU,SAAlC,CAA2C;AAEvCC,EAAAA,iBAAiB,GAAE;AACf,UAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAxC;AACA,SAAKH,KAAL,CAAWI,QAAX,CAAoBX,gBAAgB,CAACM,OAAD,CAApC;AACH;;AAGDM,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,UAAMC,WAAW,GAAG,KAAKR,KAAL,CAAWQ,WAA/B;;AAFI,2CAGyBA,WAHzB;AAAA,UAGGC,OAHH,gBAGGA,OAHH;AAAA,UAGYC,KAHZ,gBAGYA,KAHZ;;AAKR,QAAGD,OAAH,EAAW;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,WACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,WAAW,CAACG,QADjB,CADJ;AAMH;;AAtB0C;;AAyB3C,MAAMC,cAAc,GAAGC,KAAK,IAAG;AAC3B,SAAO;AACHL,IAAAA,WAAW,EAAEK,KAAK,CAACL;AADhB,GAAP;AAGH,CAJD;;AAMA,eAAelB,UAAU,CAACD,OAAO,CAACuB,cAAD,CAAP,CAAwBhB,aAAxB,CAAD,CAAzB","sourcesContent":["import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router-dom'\nimport ImageCard from '../components/ImageCard'\nimport singleImageThunk from '../redux/action/singleImageThunk'\nimport singleImageFetch from '../redux/action/singleImageThunk'\nimport Loading from '../components/Loading'\nimport Error from '../components/Error'\n\nclass DetailsScreen extends React.Component{\n\n    componentDidMount(){\n        const matchId = this.props.match.params.id\n        this.props.dispatch(singleImageFetch(matchId))\n    }\n\n\n    render(){\n        console.log('refresh')\n        const singleImage = this.props.singleImage\n        const {loading, error} = {...singleImage}\n    \n    if(loading){\n        return <div></div>\n    }\n    return (\n        <div className='image-details-wrapper'>\n            {singleImage.imageUrl}\n        </div>\n    )\n\n}\n}\n\nconst mapPropToState = state =>{\n    return {\n        singleImage: state.singleImage\n    }\n}\n\nexport default withRouter(connect(mapPropToState)(DetailsScreen))"]},"metadata":{},"sourceType":"module"}