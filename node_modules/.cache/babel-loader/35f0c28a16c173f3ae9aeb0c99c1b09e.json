{"ast":null,"code":"var _jsxFileName = \"/home/mayor/gidiShare2/frontend/src/screen/ImageList.js\";\nimport React from 'react';\nimport ImageCard from '../components/ImageCard';\nimport Header from '../components/HeaderSection';\nimport { connect } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport NoItem from '../components/NoItem';\nimport imageListThunk from '../redux/action/imageListActionThunk';\nimport thumpThunk from '../redux/action/thumpThunk';\nimport '../styles/imageList.css';\nimport Footer from '../components/Footer';\n\nclass Images extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleThumpUp = imageId => {\n      const token = this.props.auth.token;\n      console.log(imageId);\n\n      if (!token) {\n        this.props.handleLogin();\n      } else {\n        this.props.dispatch(thumpThunk(imageId, token));\n      }\n    };\n\n    this.handleThumpDown = imageId => {\n      const token = this.props.auth.success;\n\n      if (!token) {\n        this.props.handleLogin();\n      } else {\n        this.props.dispatch(thumpThunk(imageId, token, false));\n      }\n    };\n\n    this.handleDetailsRedirect = imageId => {\n      this.props.history.push(`/details/${imageId}`);\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(imageListThunk());\n  } // componentDidUpdate(prevProps){\n  //   if(prevProps.images.error === 'You are not authorized'){\n  //     prevProps.handleLogin()\n  //}\n\n\n  componentDidUpdate(prevProps) {\n    if (this.props.auth.success !== prevProps.auth.success && !this.props.auth.token) {\n      this.props.handleLogin();\n    }\n  }\n\n  render() {\n    const _this$props$images = this.props.images,\n          images = _this$props$images.images,\n          loading = _this$props$images.loading;\n    const imageUrl = this.props.auth.imageUrl;\n    let noImageOrImageCard = React.createElement(NoItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    });\n\n    if (images.length > 0) {\n      noImageOrImageCard = images.map(image => React.createElement(ImageCard, {\n        image: image,\n        detailsRedirect: this.handleDetailsRedirect,\n        handleLogin: this.props.handleLogin,\n        handleThumpUp: this.handleThumpUp,\n        handleThumpDown: this.handleThumpDown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"card-session\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Header, {\n      userImageUrl: imageUrl,\n      handleUpload: this.props.handleUploadForm,\n      handleLogin: this.props.handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), loading ? React.createElement(\"div\", {\n      className: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })) : noImageOrImageCard), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    auth: state.auth,\n    images: state.images\n  };\n};\n\nexport default withRouter(connect(mapState)(Images));","map":{"version":3,"sources":["/home/mayor/gidiShare2/frontend/src/screen/ImageList.js"],"names":["React","ImageCard","Header","connect","withRouter","Redirect","Loading","NoItem","imageListThunk","thumpThunk","Footer","Images","Component","constructor","props","handleThumpUp","imageId","token","auth","console","log","handleLogin","dispatch","handleThumpDown","success","handleDetailsRedirect","history","push","componentDidMount","componentDidUpdate","prevProps","render","images","loading","imageUrl","noImageOrImageCard","length","map","image","handleUploadForm","mapState","state"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ImageCard from '../components/ImageCard'\nimport Header from '../components/HeaderSection'\nimport {connect} from 'react-redux'\nimport {withRouter, Redirect} from 'react-router-dom'\nimport Loading from '../components/Loading'\nimport NoItem from '../components/NoItem'\nimport imageListThunk from '../redux/action/imageListActionThunk'\nimport thumpThunk from '../redux/action/thumpThunk'\nimport '../styles/imageList.css'\nimport Footer from '../components/Footer'\n\n\n\nclass Images extends React.Component{\n\n    constructor(props){\n        super(props)\n    }\n\n    componentDidMount(){\n        this.props.dispatch(imageListThunk())   \n    }\n\n   // componentDidUpdate(prevProps){\n     //   if(prevProps.images.error === 'You are not authorized'){\n       //     prevProps.handleLogin()\n        //}\n\n    componentDidUpdate(prevProps){\n        if(this.props.auth.success !== prevProps.auth.success && !this.props.auth.token){\n            this.props.handleLogin()\n        }\n    }\n\n\n    handleThumpUp = (imageId) =>{\n        const token = this.props.auth.token\n        console.log(imageId)\n        if(!token){\n            this.props.handleLogin()\n        }else{\n            this.props.dispatch(thumpThunk(imageId, token))\n        }\n    }\n\n\n\n    handleThumpDown=(imageId)=>{\n        const token = this.props.auth.success\n        if(!token){\n            this.props.handleLogin()\n        }else{\n            this.props.dispatch(thumpThunk(imageId, token, false))\n        }\n\n    }\n\n    handleDetailsRedirect =(imageId)=>{\n        this.props.history.push(`/details/${imageId}`)\n\n    }\n\n    render(){\n        const {images, loading} = this.props.images\n        const {imageUrl} = this.props.auth\n\n        let noImageOrImageCard = <NoItem />\n\n        if(images.length > 0){\n            noImageOrImageCard = images.map(image => <ImageCard  image={image} \n                detailsRedirect={this.handleDetailsRedirect} handleLogin={this.props.handleLogin} \n                handleThumpUp={this.handleThumpUp} handleThumpDown={this.handleThumpDown}/>)\n        }\n\n        return (\n        <div>\n            <section className='card-session'>\n                <Header userImageUrl={imageUrl} handleUpload={this.props.handleUploadForm} handleLogin={this.props.handleLogin}/>\n                {loading ? <div className='loading'><Loading /></div> : noImageOrImageCard}\n            </section>\n\n            <Footer />\n            </div>\n\n        )\n    }\n\n}\n\nconst mapState = (state) => {\n    return {\n        auth: state.auth,\n        images: state.images\n\n    }\n}\n\nexport default withRouter(connect(mapState)(Images))"]},"metadata":{},"sourceType":"module"}