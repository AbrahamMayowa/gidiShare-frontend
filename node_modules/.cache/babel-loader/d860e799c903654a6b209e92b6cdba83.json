{"ast":null,"code":"import { createStore, combineReducers } from 'redux';\nimport appleMiddleware from 'redux-thunk';\nimport thunk from 'redux-thunk';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport auth from './reducer/authReducer';\nimport images from './reducer/images';\nimport singleImage from './reducer/singleImageReducer'; // the combine reducers\n\nconst reducers = combineReducers({\n  auth,\n  images: images,\n  singleImage: singleImage\n});\nconst persistConfig = {\n  key: 'root',\n  //using localstorage\n  storage,\n  //only the auth reducer will be persisted\n  whitelist: ['auth']\n}; //const persistedReducer = persistReducer(persistConfig, reducers)\n//export default () => {\n//return \n\nexport const store = createStore(reducers, appleMiddleware(thunk)); //let persistor = persistStore(store)\n//return {store, persistor}\n//}","map":{"version":3,"sources":["/home/mayor/gidiShare2/frontend/src/redux/store.js"],"names":["createStore","combineReducers","appleMiddleware","thunk","persistReducer","persistStore","storage","auth","images","singleImage","reducers","persistConfig","key","whitelist","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,cAAR,EAAwBC,YAAxB,QAA2C,eAA3C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,8BAAxB,C,CAGA;;AACA,MAAMC,QAAQ,GAAGT,eAAe,CAAC;AAC7BM,EAAAA,IAD6B;AAE9BC,EAAAA,MAAM,EAAEA,MAFsB;AAG7BC,EAAAA,WAAW,EAAEA;AAHgB,CAAD,CAAhC;AAMA,MAAME,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElB;AACAN,EAAAA,OAHkB;AAIlB;AACAO,EAAAA,SAAS,EAAE,CAAC,MAAD;AALO,CAAtB,C,CAQA;AAEA;AACI;;AACJ,OAAO,MAAMC,KAAK,GAAGd,WAAW,CAACU,QAAD,EAAWR,eAAe,CAACC,KAAD,CAA1B,CAAzB,C,CACH;AACA;AAGJ","sourcesContent":["import {createStore, combineReducers} from 'redux'\nimport appleMiddleware from 'redux-thunk'\nimport thunk from 'redux-thunk'\nimport {persistReducer, persistStore} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport auth from './reducer/authReducer'\nimport images from './reducer/images'\nimport singleImage from './reducer/singleImageReducer'\n\n\n// the combine reducers\nconst reducers = combineReducers({\n    auth,\n   images: images,\n    singleImage: singleImage\n})\n\nconst persistConfig = {\n    key: 'root',\n    //using localstorage\n    storage,\n    //only the auth reducer will be persisted\n    whitelist: ['auth']\n}\n\n//const persistedReducer = persistReducer(persistConfig, reducers)\n\n//export default () => {\n    //return \nexport const store = createStore(reducers, appleMiddleware(thunk))\n    //let persistor = persistStore(store)\n    //return {store, persistor}\n\n\n//}\n\n"]},"metadata":{},"sourceType":"module"}