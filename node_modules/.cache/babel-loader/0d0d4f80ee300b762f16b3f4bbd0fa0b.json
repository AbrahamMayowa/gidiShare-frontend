{"ast":null,"code":"import React,{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{Formik}from'formik';import createUserThunk from'../redux/action/createUserThunk';import SyncLoader from'./SyncLoader';import'../styles/signup.css';import{store}from'../redux/store';var SignupForm=function SignupForm(_ref){var handleSignup=_ref.handleSignup;var dispatch=useDispatch();var authData=useSelector(function(store){return store.auth;});var error=authData.error,success=authData.success,loading=authData.loading;var validate=function validate(values){var errors={};if(!values.username){errors.username='Username is required';}else if(values.username.length<4){errors.username='Username should be at least four characters long';}else if(!values.password){errors.password='Password is required';}else if(values.password.length<4){errors.password='Password should be at least four characters long';}else if(!values.image){errors.image='Image is required';}else if(values.image){var imageExt=values.image.name.split('.');var ext=imageExt[imageExt.length-1];var supportedFormat=['png','jpg','jpeg'];if(!supportedFormat.includes(ext)){errors.image=\"The uploaded image is not in a supported image format\";}}return errors;};return React.createElement(Formik,{initialValues:{password:'',username:'',image:null},validate:validate,onSubmit:function onSubmit(values){return dispatch(createUserThunk(values.username,values.password,values.image));}},function(props){return React.createElement(\"div\",{className:\"form-wrapper\"},React.createElement(\"div\",{className:\"form_control\"},React.createElement(\"div\",{className:\"signup\"},\"SIGNUP\"),React.createElement(\"form\",{onSubmit:props.handleSubmit},React.createElement(\"div\",{className:\"username-wrapper\"},React.createElement(\"label\",{htmlFor:\"username\"}),React.createElement(\"i\",{className:\"fa fa-user icon\"}),React.createElement(\"input\",{id:\"username\",name:\"username\",type:\"text\",placeholder:\"Username\",onChange:props.handleChange,onBlur:props.handleBlur,values:props.values.username})),React.createElement(\"div\",{className:\"form-error\"},props.touched.username&&props.errors.username?React.createElement(\"div\",null,props.errors.username):null),React.createElement(\"div\",{className:\"password-wrapper\"},React.createElement(\"label\",{htmlFor:\"password\"}),React.createElement(\"i\",{className:\"fa fa-key icon\"}),React.createElement(\"input\",{id:\"password\",name:\"password\",type:\"password\",placeholder:\"Password\",onChange:props.handleChange,onBlur:props.handleBlur})),React.createElement(\"div\",{className:\"form-error\"},props.touched.password&&props.errors.password?React.createElement(\"div\",null,props.errors.password):null),React.createElement(\"div\",{className:\"image-wrapper\"},React.createElement(\"i\",{className:\"fas fa-upload icon\"}),React.createElement(\"label\",{htmlFor:\"image\",className:\"customed-upload\"},React.createElement(\"input\",{id:\"image\",name:\"image\",type:\"file\",onChange:function onChange(event){props.setFieldValue(\"image\",event.currentTarget.files[0]);},onBlur:props.handleBlur}),React.createElement(\"div\",{className:\"upload-label\"},\"Upload image\"))),React.createElement(\"div\",{className:\"form-error\"},props.touched.image&&props.errors.image?props.errors.image:null,props.values.image&&React.createElement(\"div\",{className:\"image-name\"},props.values.image.name)),React.createElement(\"div\",{className:\"cancel-signup-wrapper\"},React.createElement(\"div\",{className:\"cancel-signup\",onClick:handleSignup},\"Cancel\"),React.createElement(\"button\",{className:\"signup-submit\",type:\"submit\"},loading?React.createElement(\"div\",{className:\"load\"},React.createElement(SyncLoader,null)):'Submit'))),error&&React.createElement(\"div\",{className:\"reducer-error\"},error),success&&React.createElement(\"div\",{className:\"reducer-success\"},\"You have successfully created an account\")));});};export default SignupForm;","map":{"version":3,"sources":["/Users/mayowa/Desktop/gidiShare-update/api/gidiShare-frontend/src/components/signupModal.js"],"names":["React","useEffect","useDispatch","useSelector","Formik","createUserThunk","SyncLoader","store","SignupForm","handleSignup","dispatch","authData","auth","error","success","loading","validate","values","errors","username","length","password","image","imageExt","name","split","ext","supportedFormat","includes","props","handleSubmit","handleChange","handleBlur","touched","event","setFieldValue","currentTarget","files"],"mappings":"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","sourcesContent":["import React, { useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {Formik} from 'formik'\nimport createUserThunk from '../redux/action/createUserThunk'\nimport SyncLoader from './SyncLoader'\nimport '../styles/signup.css'\nimport { store } from '../redux/store'\n\nconst SignupForm = ({handleSignup}) => {\n   const dispatch = useDispatch()\n   const authData = useSelector(store => store.auth)\n   const {error, success, loading} = authData\n\n    const validate = values => {\n        const errors = {}\n        \n        if(!values.username){\n                errors.username = 'Username is required'\n            }else if(values.username.length < 4){\n                errors.username = 'Username should be at least four characters long'\n            }else if(!values.password){\n                errors.password = 'Password is required'\n            }else if(values.password.length < 4){\n                errors.password = 'Password should be at least four characters long'\n            }else if(!values.image){\n                errors.image = 'Image is required'\n            }else if(values.image){\n                const imageExt = values.image.name.split('.')\n                const ext = imageExt[imageExt.length-1]\n                const supportedFormat = ['png', 'jpg', 'jpeg']\n                if(!supportedFormat.includes(ext)){\n                errors.image = \"The uploaded image is not in a supported image format\"\n                }\n        }\n\n        return errors\n    }\n\n    return (\n    <Formik\n        initialValues = {{\n            password: '',\n            username: '',\n            image: null\n        }}\n        validate = {validate}\n        onSubmit= {values => dispatch(createUserThunk(values.username, values.password, values.image))}\n        >\n        \n        {props => (\n        <div className=\"form-wrapper\">\n        <div className=\"form_control\">\n\n            <div className='signup'>SIGNUP</div>\n\n\n\n            \n            <form onSubmit={props.handleSubmit}>\n                <div className='username-wrapper'>\n                    <label htmlFor='username' />\n                    <i className=\"fa fa-user icon\"></i>\n                    <input\n                        id='username'\n                        name='username'\n                        type='text'\n                        placeholder='Username'\n                        onChange={props.handleChange}\n                        onBlur={props.handleBlur}\n                        values={props.values.username}\n                    />\n                </div>\n                <div className='form-error'>\n                    {props.touched.username && props.errors.username ? \n                    (<div>{props.errors.username}</div>): null}\n                </div>\n\n                <div className='password-wrapper'>\n                    <label htmlFor='password' />\n                    <i className=\"fa fa-key icon\"></i>\n                    <input\n                        id='password'\n                        name='password'\n                        type='password'\n                        placeholder='Password'\n                        onChange={props.handleChange}\n                        onBlur={props.handleBlur}\n                    />\n                   \n                </div>\n                <div className='form-error'>\n                    {props.touched.password && props.errors.password ? (\n                        <div>{props.errors.password}</div>\n                    ): null}\n                </div>\n\n                <div className='image-wrapper'>\n                    <i className=\"fas fa-upload icon\"></i>\n                    <label htmlFor='image' className='customed-upload'>\n                    <input\n                        id='image'\n                        name='image'\n                        type='file'\n                        onChange={(event) =>{\n                            props.setFieldValue(\"image\", event.currentTarget.files[0]);\n                        }}\n                        onBlur={props.handleBlur}\n                    />\n                    <div className='upload-label'>Upload image</div>\n\n                    </label>\n                   \n                </div>\n                <div className='form-error'>\n                {props.touched.image && props.errors.image ? \n                props.errors.image : null }\n                \n                {props.values.image && (<div className='image-name'>{props.values.image.name}</div>)}\n                </div>\n                <div className='cancel-signup-wrapper'>\n                    <div className='cancel-signup' onClick={handleSignup}>Cancel</div>\n                    <button className='signup-submit' type='submit'>{loading ? <div className='load'><SyncLoader /></div> : 'Submit'}</button>\n                  \n                </div>\n            </form>\n            {error && (<div className='reducer-error'>{error}</div>)}\n            {success && (<div className='reducer-success'>You have successfully created an account</div>)}\n        </div>\n    </div>\n        )}\n    </Formik>\n    )\n}\n\nexport default SignupForm"]},"metadata":{},"sourceType":"module"}