{"ast":null,"code":"import _slicedToArray from \"/home/mayor/gidiShare2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mayor/gidiShare2/frontend/src/components/signupModal.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useState } from 'react';\nimport '../styles/signup.css';\n\nconst SignupForm = ({\n  handleSignup\n}) => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        imageName = _useState2[0],\n        setImageName = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        imageData = _useState4[0],\n        setImageData = _useState4[1];\n\n  const validate = values => {\n    const errors = {};\n\n    if (!values.image) {\n      errors.image = 'Image is required';\n    } else if (values.image) {\n      const imageExt = values.image.name.split('.');\n      const ext = imageExt[imageExt.length - 1];\n      const supportedFormat = ['png', 'jpg', 'jpeg'];\n\n      if (!supportedFormat.includes(ext)) {\n        errors.image = \"The uploaded image is not in a supported image format\";\n      } else if (!values.username) {\n        errors.username = 'Username is required';\n      } else if (values.username.length < 4) {}\n    }\n\n    return errors;\n  };\n\n  return React.createElement(Formik, {\n    initialValues: {\n      password: '',\n      username: '',\n      image: null\n    },\n    validate: validate,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, props => React.createElement(\"div\", {\n    className: \"form-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form_control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"SIGNUP\"), React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"username-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    className: \"fa fa-user icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    id: \"username\",\n    name: \"username\",\n    type: \"text\",\n    placeholder: \"Username\",\n    onChange: props.handleChange,\n    onBlur: props.handleBlur,\n    values: props.values.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, props.touched.username && props.errors.username ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, props.errors.username) : null), React.createElement(\"div\", {\n    className: \"password-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    className: \"fa fa-key icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: props.handleChange,\n    onBlur: props.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, props.touched.password && props.errors.password ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, props.errors.password) : null), React.createElement(\"div\", {\n    className: \"image-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-upload icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"image\",\n    className: \"customed-upload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"image\",\n    name: \"image\",\n    type: \"file\",\n    onChange: event => {\n      props.setFieldValue(\"image\", event.currentTarget.files[0]);\n    },\n    onBlur: props.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"upload-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Upload image\"))), React.createElement(\"div\", {\n    className: \"form-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, props.touched.image && props.errors.image ? props.errors.image : null, props.values.image && React.createElement(\"div\", {\n    className: \"image-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, props.values.image.name)), React.createElement(\"div\", {\n    className: \"cancel-signup-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cancel-signup\",\n    onClick: handleSignup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(\"button\", {\n    className: \"signup-submit\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Submit\"))))));\n};\n\nexport default SignupForm;","map":{"version":3,"sources":["/home/mayor/gidiShare2/frontend/src/components/signupModal.js"],"names":["React","useEffect","useDispatch","Formik","Yup","useState","SignupForm","handleSignup","imageName","setImageName","imageData","setImageData","validate","values","errors","image","imageExt","name","split","ext","length","supportedFormat","includes","username","password","alert","JSON","stringify","props","handleSubmit","handleChange","handleBlur","touched","event","setFieldValue","currentTarget","files"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport {useDispatch} from 'react-redux'\nimport {Formik} from 'formik'\nimport * as Yup from 'yup'\nimport {useState} from 'react'\n\nimport '../styles/signup.css'\n\nconst SignupForm = ({handleSignup}) => {\n    const [imageName, setImageName] = useState(null)\n    const [imageData, setImageData] = useState(null)\n\n    const validate = values => {\n        const errors = {}\n        \n        \n        if(!values.image){\n            errors.image = 'Image is required'\n        }else if(values.image){\n            const imageExt = values.image.name.split('.')\n            const ext = imageExt[imageExt.length-1]\n            const supportedFormat = ['png', 'jpg', 'jpeg']\n            if(!supportedFormat.includes(ext)){\n            errors.image = \"The uploaded image is not in a supported image format\"\n            }else if(!values.username){\n                errors.username = 'Username is required'\n            }else if(values.username.length < 4){\n                \n            }\n        }\n\n        return errors\n    }\n\n    return (\n    <Formik\n        initialValues = {{\n            password: '',\n            username: '',\n            image: null\n        }}\n        validate = {validate}\n        onSubmit= {values => {\n            alert(JSON.stringify(values, null, 2))}}\n        >\n        \n        {props => (\n        <div className=\"form-wrapper\">\n        <div className=\"form_control\">\n\n            <div className='signup'>SIGNUP</div>\n\n\n\n            \n            <form onSubmit={props.handleSubmit}>\n                <div className='username-wrapper'>\n                    <label htmlFor='username' />\n                    <i className=\"fa fa-user icon\"></i>\n                    <input\n                        id='username'\n                        name='username'\n                        type='text'\n                        placeholder='Username'\n                        onChange={props.handleChange}\n                        onBlur={props.handleBlur}\n                        values={props.values.username}\n                    />\n                </div>\n                <div className='form-error'>\n                    {props.touched.username && props.errors.username ? \n                    (<div>{props.errors.username}</div>): null}\n                </div>\n\n                <div className='password-wrapper'>\n                    <label htmlFor='password' />\n                    <i className=\"fa fa-key icon\"></i>\n                    <input\n                        id='password'\n                        name='password'\n                        type='password'\n                        placeholder='Password'\n                        onChange={props.handleChange}\n                        onBlur={props.handleBlur}\n                    />\n                   \n                </div>\n                <div className='form-error'>\n                    {props.touched.password && props.errors.password ? (\n                        <div>{props.errors.password}</div>\n                    ): null}\n                </div>\n\n                <div className='image-wrapper'>\n                    <i className=\"fas fa-upload icon\"></i>\n                    <label htmlFor='image' className='customed-upload'>\n                    <input\n                        id='image'\n                        name='image'\n                        type='file'\n                        onChange={(event) =>{\n                            props.setFieldValue(\"image\", event.currentTarget.files[0]);\n                        }}\n                        onBlur={props.handleBlur}\n                    />\n                    <div className='upload-label'>Upload image</div>\n\n                    </label>\n                   \n                </div>\n                <div className='form-error'>\n                {props.touched.image && props.errors.image ? \n                props.errors.image : null }\n                \n                {props.values.image && (<div className='image-name'>{props.values.image.name}</div>)}\n                </div>\n                <div className='cancel-signup-wrapper'>\n                    <div className='cancel-signup' onClick={handleSignup}>Cancel</div>\n                    <button className='signup-submit' type='submit'>Submit</button>\n                </div>\n            </form>\n        </div>\n    </div>\n        )}\n    </Formik>\n    )\n}\n\nexport default SignupForm"]},"metadata":{},"sourceType":"module"}