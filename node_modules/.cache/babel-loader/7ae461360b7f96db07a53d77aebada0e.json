{"ast":null,"code":"import _objectSpread from \"/home/mayor/gidiShare2/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/mayor/gidiShare2/frontend/src/screen/ImageDetails.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport ImageCard from '../components/ImageCard';\nimport singleImageThunk from '../redux/action/singleImageThunk';\nimport singleImageFetch from '../redux/action/singleImageThunk';\nimport Loading from '../components/Loading';\nimport Header from '../components/HeaderSection';\nimport Error from '../components/Error';\nimport thumpThunk from '../redux/action/thumpThunk';\nimport '../styles/detailsScreen.css';\n\nclass DetailsScreen extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleThumpUp = imageId => {\n      const token = this.props.auth.token;\n\n      if (!token) {\n        this.props.handleLogin();\n      } else {\n        this.props.dispatch(thumpThunk(imageId, token));\n      }\n    };\n\n    this.handleThumpDown = imageId => {\n      const token = this.props.auth.token;\n\n      if (!token) {\n        this.props.handleLogin();\n      } else {\n        this.props.dispatch(thumpThunk(imageId, token, false));\n      }\n    };\n  }\n\n  componentDidMount() {\n    const matchId = this.props.match.params.id;\n    this.props.dispatch(singleImageFetch(matchId));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.auth.token) {\n      this.props.handle;\n    }\n  }\n\n  render() {\n    const singleImage = this.props.singleImage;\n\n    const _singleImage = _objectSpread({}, singleImage),\n          loading = _singleImage.loading,\n          error = _singleImage.error;\n\n    const _this$props$auth = _objectSpread({}, this.props.auth),\n          imageUrl = _this$props$auth.imageUrl;\n\n    if (loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    } else if (error) {\n      return React.createElement(Error, {\n        error: error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: \"details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Header, {\n        userImageUrl: imageUrl,\n        handleLogin: this.props.handleLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(ImageCard, {\n        image: singleImage,\n        handleLogin: this.props.handleLogin,\n        handleThumpUp: this.handleThumpUp,\n        handleThumpDown: this.handleThumpDown,\n        isDetailsCard: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nconst mapPropToState = state => {\n  return {\n    singleImage: state.singleImage,\n    auth: state.auth\n  };\n};\n\nexport default withRouter(connect(mapPropToState)(DetailsScreen));","map":{"version":3,"sources":["/home/mayor/gidiShare2/frontend/src/screen/ImageDetails.js"],"names":["React","useEffect","connect","withRouter","ImageCard","singleImageThunk","singleImageFetch","Loading","Header","Error","thumpThunk","DetailsScreen","Component","handleThumpUp","imageId","token","props","auth","handleLogin","dispatch","handleThumpDown","componentDidMount","matchId","match","params","id","componentDidUpdate","prevProps","handle","render","singleImage","loading","error","imageUrl","mapPropToState","state"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router-dom'\nimport ImageCard from '../components/ImageCard'\nimport singleImageThunk from '../redux/action/singleImageThunk'\nimport singleImageFetch from '../redux/action/singleImageThunk'\nimport Loading from '../components/Loading'\nimport Header from '../components/HeaderSection'\nimport Error from '../components/Error'\nimport thumpThunk from '../redux/action/thumpThunk'\nimport '../styles/detailsScreen.css'\n\nclass DetailsScreen extends React.Component{\n\n    componentDidMount(){\n        const matchId = this.props.match.params.id\n        this.props.dispatch(singleImageFetch(matchId))\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.auth.token){\n            this.props.handle\n        }\n    }\n\n    handleThumpUp = (imageId) =>{\n        const token = this.props.auth.token\n        if(!token){\n            this.props.handleLogin()\n        }else{\n            this.props.dispatch(thumpThunk(imageId, token))\n        }\n    }\n\n\n    handleThumpDown = (imageId)=>{\n        const token = this.props.auth.token\n        if(!token){\n            this.props.handleLogin()\n        }else{\n            this.props.dispatch(thumpThunk(imageId, token, false))\n        }\n\n    }\n\n\n    render(){\n        const singleImage = this.props.singleImage\n        const {loading, error} = {...singleImage}\n        const {imageUrl} = {...this.props.auth}\n    \n    if(loading){\n        return <Loading />\n    }\n    else if(error){\n        return <Error error={error} />\n    }else{\n    return (\n        <div className='details'>\n            <Header userImageUrl={imageUrl} handleLogin={this.props.handleLogin} />\n                <ImageCard image={singleImage} handleLogin={this.props.handleLogin} \n                    handleThumpUp={this.handleThumpUp} handleThumpDown={this.handleThumpDown} isDetailsCard={true}/>\n        </div>\n    )\n    }\n\n}\n}\n\nconst mapPropToState = state =>{\n    return {\n        singleImage: state.singleImage,\n        auth: state.auth\n    }\n}\n\nexport default withRouter(connect(mapPropToState)(DetailsScreen))"]},"metadata":{},"sourceType":"module"}