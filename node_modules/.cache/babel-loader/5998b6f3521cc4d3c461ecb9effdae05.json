{"ast":null,"code":"import _objectSpread from \"/home/mayor/gidiShare2/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { SINGLE_IMAGE_FETCH_FAILS, SINGLE_IMAGE_FETCH_STARTS, SINGLE_IMAGE_FETCH_SUCCESS } from '../action/singleImage';\nimport { UPLOAD_FAIL, UPLOAD_STARTS, UPLOAD_SUCCESS } from '../action/uploadAction';\nimport { UPDATE_SINGLE_IMAGE_THUMP_DOWN, UPDATE_SINGLE_IMAGE_THUMP_UP } from '../action/thumpAction';\nconst initialState = {\n  loading: false,\n  error: '',\n  imageId: '',\n  imageUrl: '',\n  creator: {},\n  description: '',\n  category: '',\n  createdAt: null,\n  thumpUp: {\n    thu\n  },\n  thumpDown: {},\n  success: false\n};\n\nconst singleImageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SINGLE_IMAGE_FETCH_STARTS:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case SINGLE_IMAGE_FETCH_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: null,\n        imageUrl: action.payload.result.data.singleImage.imageUrl,\n        imageId: action.payload.result.data.singleImage.imageId,\n        creator: action.payload.result.data.singleImage.creator,\n        description: action.payload.result.data.singleImage.description,\n        category: action.payload.result.data.singleImage.category,\n        createdAt: action.payload.result.data.singleImage.createdAt,\n        thumpUp: action.payload.result.data.singleImage.thumpUp,\n        thumpDown: action.payload.result.data.singleImage.thumpDown,\n        success: true\n      });\n\n    case SINGLE_IMAGE_FETCH_FAILS:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.payload.error.message,\n        success: false\n      });\n\n    case UPLOAD_STARTS:\n      return _objectSpread({}, state, {\n        error: null,\n        loading: true\n      });\n\n    case UPLOAD_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: null,\n        imageUrl: action.payload.result.data.uploadImage.imageUrl,\n        imageId: action.payload.result.data.uploadImage.imageId,\n        creator: action.payload.result.data.uploadImage.creator,\n        description: action.payload.result.data.uploadImage.description,\n        category: action.payload.result.data.uploadImage.category,\n        createdAt: action.payload.result.data.uploadImage.createdAt,\n        thumpUp: action.payload.result.data.uploadImage.thumpUp,\n        thumpDown: action.payload.result.data.uploadImage.thumpDown,\n        success: true\n      });\n\n    case UPLOAD_FAIL:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.payload.error.message,\n        success: false\n      });\n\n    case UPDATE_SINGLE_IMAGE_THUMP_UP:\n      const thumpUpMutation = action.payload.data.thumpUpMutation;\n      return _objectSpread({}, state, {\n        imageId: thumpUpMutation.imageId,\n        thumpUp: thumpUpMutation.thumpUp,\n        thumpDown: thumpUpMutation.thumpDown,\n        loading: false\n      });\n\n    case UPDATE_SINGLE_IMAGE_THUMP_DOWN:\n      const thumpDownMutation = action.payload.data.thumpDownMutation;\n      return _objectSpread({}, state, {\n        imageId: thumpDownMutation.imageId,\n        thumpUp: thumpDownMutation.thumpUp,\n        thumpDown: thumpDownMutation.thumpDown,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default singleImageReducer;","map":{"version":3,"sources":["/home/mayor/gidiShare2/frontend/src/redux/reducer/singleImageReducer.js"],"names":["SINGLE_IMAGE_FETCH_FAILS","SINGLE_IMAGE_FETCH_STARTS","SINGLE_IMAGE_FETCH_SUCCESS","UPLOAD_FAIL","UPLOAD_STARTS","UPLOAD_SUCCESS","UPDATE_SINGLE_IMAGE_THUMP_DOWN","UPDATE_SINGLE_IMAGE_THUMP_UP","initialState","loading","error","imageId","imageUrl","creator","description","category","createdAt","thumpUp","thu","thumpDown","success","singleImageReducer","state","action","type","payload","result","data","singleImage","message","uploadImage","thumpUpMutation","thumpDownMutation"],"mappings":"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","sourcesContent":["import {SINGLE_IMAGE_FETCH_FAILS, SINGLE_IMAGE_FETCH_STARTS, SINGLE_IMAGE_FETCH_SUCCESS} from '../action/singleImage'\nimport {UPLOAD_FAIL, UPLOAD_STARTS, UPLOAD_SUCCESS} from '../action/uploadAction'\nimport {UPDATE_SINGLE_IMAGE_THUMP_DOWN, UPDATE_SINGLE_IMAGE_THUMP_UP} from '../action/thumpAction'\n\nconst initialState = {\n    loading: false,\n    error: '',\n    imageId: '',\n    imageUrl: '',\n    creator: {},\n    description: '',\n    category: '',\n    createdAt: null,\n    thumpUp: {\n        thu\n    },\n    thumpDown: {},\n    success: false\n\n}\n\nconst singleImageReducer = (state=initialState, action) =>{\n    switch(action.type){\n        case SINGLE_IMAGE_FETCH_STARTS:\n            return {\n                ...state,\n                loading: true\n            }\n        case SINGLE_IMAGE_FETCH_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                error: null,\n\n                imageUrl: action.payload.result.data.singleImage.imageUrl,\n                imageId: action.payload.result.data.singleImage.imageId,\n                creator: action.payload.result.data.singleImage.creator,\n                description: action.payload.result.data.singleImage.description,\n                category: action.payload.result.data.singleImage.category,\n                createdAt: action.payload.result.data.singleImage.createdAt,\n                thumpUp: action.payload.result.data.singleImage.thumpUp,\n                thumpDown: action.payload.result.data.singleImage.thumpDown,\n                success: true\n            }\n        case SINGLE_IMAGE_FETCH_FAILS:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload.error.message,\n                success: false\n            }\n\n        case UPLOAD_STARTS:\n            return {\n                ...state,\n                error: null,\n                loading: true,\n            }\n        case UPLOAD_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                error: null,\n                imageUrl: action.payload.result.data.uploadImage.imageUrl,\n                imageId: action.payload.result.data.uploadImage.imageId,\n                creator: action.payload.result.data.uploadImage.creator,\n                description: action.payload.result.data.uploadImage.description,\n                category: action.payload.result.data.uploadImage.category,\n                createdAt: action.payload.result.data.uploadImage.createdAt,\n                thumpUp: action.payload.result.data.uploadImage.thumpUp,\n                thumpDown: action.payload.result.data.uploadImage.thumpDown,\n                success: true\n            }\n        case UPLOAD_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload.error.message,\n                success: false\n            }\n\n        case UPDATE_SINGLE_IMAGE_THUMP_UP:\n            const thumpUpMutation = action.payload.data.thumpUpMutation\n            return{\n                ...state,\n                imageId: thumpUpMutation.imageId,\n                thumpUp: thumpUpMutation.thumpUp,\n                thumpDown: thumpUpMutation.thumpDown,\n                loading: false\n            }\n        case UPDATE_SINGLE_IMAGE_THUMP_DOWN:\n            const thumpDownMutation = action.payload.data.thumpDownMutation\n            return {\n                ...state,\n                imageId: thumpDownMutation.imageId,\n                thumpUp: thumpDownMutation.thumpUp,\n                thumpDown: thumpDownMutation.thumpDown,\n                loading: false\n            }\n        default:\n            return state\n            \n    }\n}\n\nexport default singleImageReducer"]},"metadata":{},"sourceType":"module"}