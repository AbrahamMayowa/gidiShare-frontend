{"ast":null,"code":"var _jsxFileName = \"/home/mayor/gidiShare2/frontend/src/components/signupModal.js\";\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nconst SignupForm = () => {\n  const handleImageValidate = e => {\n    const errors = {};\n\n    if (!values.image) {\n      errors.image = 'Image is required';\n    } else if (values.image.mimetype !== 'image/jpg' || !values.image.mimetype !== 'image/jpeg' || !values.image.mimetype !== 'image/png') {\n      errors.image = 'Only png, jpg or jpeg image format is valid';\n    }\n\n    return errors;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      password: '',\n      username: '',\n      image: null\n    },\n    validate,\n    validationSchema: Yup.object({\n      password: Yup.string().min(5, 'Password must be at least 5 characters').required('Password field is required'),\n      username: Yup.string().min(5, 'Username must be 5 characters at least').required('Username is required')\n    }),\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"input\", {\n    id: \"username\",\n    name: \"username\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    values: formik.values.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), formik.touched.username && formik.errors.username ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, formik.errors.username) : null, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"password\"), React.createElement(\"input\", {\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), formik.touched.password && formik.errors.password ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, formik.errors.password) : null, React.createElement(\"label\", {\n    htmlFor: \"image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Image\"), React.createElement(\"input\", {\n    id: \"image\",\n    name: \"image\",\n    type: \"file\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), formik.touched.image && formik.errors.image ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, formik.errors.image) : null, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"submit\"));\n};\n\nexport default SignupForm;","map":{"version":3,"sources":["/home/mayor/gidiShare2/frontend/src/components/signupModal.js"],"names":["React","useDispatch","useFormik","Yup","SignupForm","handleImageValidate","e","errors","values","image","mimetype","formik","initialValues","password","username","validate","validationSchema","object","string","min","required","onSubmit","alert","JSON","stringify","handleSubmit","handleChange","handleBlur","touched"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,SAAR,QAAwB,QAAxB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAErB,QAAMC,mBAAmB,GAAGC,CAAC,IAAI;AAC7B,UAAMC,MAAM,GAAG,EAAf;;AACA,QAAG,CAACC,MAAM,CAACC,KAAX,EAAiB;AACbF,MAAAA,MAAM,CAACE,KAAP,GAAe,mBAAf;AACH,KAFD,MAEM,IAAGD,MAAM,CAACC,KAAP,CAAaC,QAAb,KAA0B,WAA1B,IAAyC,CAACF,MAAM,CAACC,KAAP,CAAaC,QAAd,KAA2B,YAApE,IAAoF,CAACF,MAAM,CAACC,KAAP,CAAaC,QAAd,KAA2B,WAAlH,EAA8H;AAChIH,MAAAA,MAAM,CAACE,KAAP,GAAe,6CAAf;AACH;;AAED,WAAOF,MAAP;AACH,GATD;;AAUA,QAAMI,MAAM,GAAGT,SAAS,CAAC;AACrBU,IAAAA,aAAa,EAAE;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXL,MAAAA,KAAK,EAAE;AAHI,KADM;AAMrBM,IAAAA,QANqB;AAQrBC,IAAAA,gBAAgB,EAAEb,GAAG,CAACc,MAAJ,CAAW;AACzBJ,MAAAA,QAAQ,EAAEV,GAAG,CAACe,MAAJ,GACLC,GADK,CACD,CADC,EACE,wCADF,EAELC,QAFK,CAEI,4BAFJ,CADe;AAIzBN,MAAAA,QAAQ,EAAEX,GAAG,CAACe,MAAJ,GACLC,GADK,CACD,CADC,EACE,wCADF,EAELC,QAFK,CAEI,sBAFJ;AAJe,KAAX,CARG;AAgBrBC,IAAAA,QAAQ,EAAEb,MAAM,IAAI;AAChBc,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAehB,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACH;AAlBoB,GAAD,CAAxB;AAqBA,SACI;AAAM,IAAA,QAAQ,EAAEG,MAAM,CAACc,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AACI,IAAA,EAAE,EAAC,UADP;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,QAAQ,EAAEd,MAAM,CAACe,YAJrB;AAKI,IAAA,MAAM,EAAEf,MAAM,CAACgB,UALnB;AAMI,IAAA,MAAM,EAAEhB,MAAM,CAACH,MAAP,CAAcM,QAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAUKH,MAAM,CAACiB,OAAP,CAAed,QAAf,IAA2BH,MAAM,CAACJ,MAAP,CAAcO,QAAzC,GAAqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,MAAM,CAACJ,MAAP,CAAcO,QAApB,CAArD,GAA2F,IAVhG,EAYI;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ,EAaI;AACI,IAAA,EAAE,EAAC,UADP;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,QAAQ,EAAEH,MAAM,CAACe,YAJrB;AAKI,IAAA,MAAM,EAAEf,MAAM,CAACgB,UALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,EAoBKhB,MAAM,CAACiB,OAAP,CAAef,QAAf,IAA2BF,MAAM,CAACJ,MAAP,CAAcM,QAAzC,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,MAAM,CAACJ,MAAP,CAAcM,QAApB,CADH,GAEE,IAtBP,EAuBI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAvBJ,EAwBI;AACI,IAAA,EAAE,EAAC,OADP;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,QAAQ,EAAEF,MAAM,CAACe,YAJrB;AAKI,IAAA,MAAM,EAAEf,MAAM,CAACgB,UALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBJ,EA+BKhB,MAAM,CAACiB,OAAP,CAAenB,KAAf,IAAwBE,MAAM,CAACJ,MAAP,CAAcE,KAAtC,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAME,MAAM,CAACJ,MAAP,CAAcE,KAApB,CADH,GAEE,IAjCP,EAkCI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlCJ,CADJ;AAsCH,CAvED;;AAyEA,eAAeL,UAAf","sourcesContent":["import React from 'react'\nimport {useDispatch} from 'react-redux'\nimport {useFormik} from 'formik'\nimport * as Yup from 'yup'\n\nconst SignupForm = () => {\n\n    const handleImageValidate = e => {\n        const errors = {}\n        if(!values.image){\n            errors.image = 'Image is required'\n        }else if(values.image.mimetype !== 'image/jpg' || !values.image.mimetype !== 'image/jpeg' || !values.image.mimetype !== 'image/png'){\n            errors.image = 'Only png, jpg or jpeg image format is valid'\n        }\n\n        return errors\n    }\n    const formik = useFormik({\n        initialValues: {\n            password: '',\n            username: '',\n            image: null\n        },\n        validate,\n\n        validationSchema: Yup.object({\n            password: Yup.string()\n                .min(5, 'Password must be at least 5 characters')\n                .required('Password field is required'),\n            username: Yup.string()\n                .min(5, 'Username must be 5 characters at least')\n                .required('Username is required'),\n        }),\n        onSubmit: values => {\n            alert(JSON.stringify(values, null, 2))\n        }\n    })\n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n            <label htmlFor='username'>Username</label>\n            <input\n                id='username'\n                name='username'\n                type='text'\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                values={formik.values.username}\n            />\n            {formik.touched.username && formik.errors.username ? (<div>{formik.errors.username}</div>): null}\n\n            <label htmlFor='password'>password</label>\n            <input\n                id='password'\n                name='password'\n                type='password'\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n            />\n            {formik.touched.password && formik.errors.password ? (\n                <div>{formik.errors.password}</div>\n            ): null} \n            <label htmlFor='image'>Image</label>\n            <input\n                id='image'\n                name='image'\n                type='file'\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n            />\n            {formik.touched.image && formik.errors.image ? (\n                <div>{formik.errors.image}</div>\n            ): null}\n            <button type='submit'>submit</button>\n        </form>\n    )\n}\n\nexport default SignupForm"]},"metadata":{},"sourceType":"module"}