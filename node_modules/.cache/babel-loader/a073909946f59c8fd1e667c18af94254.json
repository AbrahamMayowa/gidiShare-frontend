{"ast":null,"code":"import _objectSpread from \"/home/mayor/gidiShare2/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/mayor/gidiShare2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mayor/gidiShare2/frontend/src/components/UploadForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport Loading from './Loading';\nimport '../styles/signup.css';\nimport uploadThunk from '../redux/action/uploadThunk';\n\nconst UploadImage = ({\n  handleUpload\n}) => {\n  const dispatch = useDispatch();\n  const SingleData = useSelector(store => store.singleImage);\n  const token = useSelector(store => store.auth.token);\n  const error = SingleData.error,\n        success = SingleData.success,\n        loading = SingleData.loading;\n\n  const _useState = useState({\n    category: {\n      error: '',\n      value: ''\n    },\n    description: {\n      error: '',\n      value: ''\n    },\n    image: {\n      error: '',\n      value: null\n    }\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        uploadData = _useState2[0],\n        setUploadData = _useState2[1];\n\n  const handleChange = event => {\n    const target = event.target;\n\n    switch (target.type) {\n      case 'category':\n        console.log(target.type);\n\n        if (!target.value) {\n          setUploadData(prevState => _objectSpread({}, prevState, {\n            category: {\n              error: 'Category is required',\n              value: ''\n            }\n          }));\n          console.log(uploadData.category);\n        } else {\n          setUploadData(prevState => _objectSpread({}, prevState, {\n            category: {\n              error: '',\n              value: target.value\n            }\n          }));\n        }\n\n      case 'description':\n        if (!target.value) {\n          setUploadData(prevState => _objectSpread({}, prevState, {\n            description: {\n              error: 'Description is required',\n              value: ''\n            }\n          }));\n        } else {\n          setUploadData(prevState => _objectSpread({}, prevState, {\n            description: {\n              error: '',\n              value: target.value\n            }\n          }));\n        }\n\n      case 'image':\n        if (!target.files[0]) {\n          setUploadData(prevState => _objectSpread({}, prevState, {\n            image: {\n              error: 'Image is required',\n              value: ''\n            }\n          }));\n        } else if (target.files[0]) {\n          const supportedImageType = ['image/png', 'image/jpeg', 'image/jpg'];\n\n          if (!supportedImageType.includes(target.files[0].type)) {\n            setUploadData(prevState => _objectSpread({}, prevState, {\n              image: {\n                error: 'Only png, jpeg or jpg image mimetype is supported'\n              }\n            }));\n          }\n        } else {\n          setUploadData(prevState => _objectSpread({}, prevState, {\n            image: {\n              error: '',\n              value: target.files[0]\n            }\n          }));\n        }\n\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(uploadData);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form_control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Upload Photo\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"username-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-user icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Pick your favorite flavor:\", React.createElement(\"select\", {\n    name: \"category\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    selected: true,\n    value: \"love\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Love\"), React.createElement(\"option\", {\n    value: \"celebration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Celebration\"), React.createElement(\"option\", {\n    value: \"happiness\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Happiness\"), React.createElement(\"option\", {\n    value: \"sadness\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Sadness\"), React.createElement(\"option\", {\n    value: \"throwback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"ThrowBack\"), React.createElement(\"option\", {\n    value: \"general\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"General\"))), React.createElement(\"div\", {\n    className: \"form-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, uploadData.category.error ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, uploadData.category.error) : null)), React.createElement(\"div\", {\n    className: \"password-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Caption\"), React.createElement(\"textarea\", {\n    name: \"description\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, uploadData.description.error ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, uploadData.description.error) : null), React.createElement(\"div\", {\n    className: \"image-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-upload icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"image\",\n    className: \"customed-upload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"image\",\n    name: \"image\",\n    type: \"file\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"upload-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Upload image\"))), React.createElement(\"div\", {\n    className: \"form-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, uploadData.image.error ? uploadData.image.error : null, uploadData.image.value && React.createElement(\"div\", {\n    className: \"image-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, uploadData.image.value.name)), React.createElement(\"div\", {\n    className: \"cancel-signup-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cancel-signup\",\n    onClick: handleUpload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(\"button\", {\n    className: \"signup-submit\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, loading ? React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }) : 'Submit'))), error && React.createElement(\"div\", {\n    className: \"reducer-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, error)));\n};\n\nexport default UploadImage;","map":{"version":3,"sources":["/home/mayor/gidiShare2/frontend/src/components/UploadForm.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Redirect","Formik","Loading","uploadThunk","UploadImage","handleUpload","dispatch","SingleData","store","singleImage","token","auth","error","success","loading","category","value","description","image","uploadData","setUploadData","handleChange","event","target","type","console","log","prevState","files","supportedImageType","includes","handleSubmit","preventDefault","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nimport {Formik} from 'formik'\nimport Loading from './Loading'\nimport '../styles/signup.css'\nimport uploadThunk from '../redux/action/uploadThunk'\n\nconst UploadImage = ({handleUpload}) => {\n   const dispatch = useDispatch()\n   const SingleData = useSelector(store => store.singleImage)\n   const token = useSelector(store => store.auth.token)\n   const {error, success, loading} = SingleData\n   const [uploadData, setUploadData] = useState({\n       category: {error: '', value: ''},\n       description: {error: '', value: ''},\n       image:{error: '', value: null}\n    })\n\n    const handleChange = (event)=>{\n        const target = event.target;\n        switch(target.type){\n            case 'category':\n                console.log(target.type)\n                if(!target.value){\n                    setUploadData(prevState => ({\n                        ...prevState,\n                        category: {error: 'Category is required', value: '',}\n                    }))\n                    console.log(uploadData.category)\n                }else{\n                    setUploadData(prevState =>({\n                        ...prevState,\n                        category: {error: '', value: target.value}\n                    }))\n                }\n            case 'description':\n                if(!target.value){\n                    setUploadData(prevState =>({\n                        ...prevState,\n                        description:{error: 'Description is required', value: ''}\n                    }))\n                }else{\n                    setUploadData(prevState => ({\n                        ...prevState,\n                        description: {error: '', value: target.value}\n                    }))\n                }\n\n            case 'image':\n                if(!target.files[0]){\n                    setUploadData(prevState =>({\n                        ...prevState,\n                        image: {error: 'Image is required', value: ''}\n                    }))\n                }else if(target.files[0]){\n                    const supportedImageType = ['image/png', 'image/jpeg', 'image/jpg']\n                    if(!supportedImageType.includes(target.files[0].type)){\n                        setUploadData(prevState =>({\n                            ...prevState,\n                            image: {error: 'Only png, jpeg or jpg image mimetype is supported'}\n                        }))\n                    }\n                    \n                }else{\n                    setUploadData(prevState => ({\n                        ...prevState,\n                        image: {error: '', value: target.files[0]}\n                    }))\n                }\n\n        }\n    }\n\n    const handleSubmit = (event)=>{\n        event.preventDefault()\n        console.log(uploadData)\n    }\n\n\n    return (\n\n        <div className=\"form-wrapper\">\n        <div className=\"form_control\">\n\n            <div className='signup'>Upload Photo</div>\n            \n            <form onSubmit={handleSubmit}>\n                <div className='username-wrapper'>\n                    <i className=\"fa fa-user icon\"></i>\n                    <label>\n                        Pick your favorite flavor:\n                        <select name=\"category\" onChange={handleChange}>\n                            <option selected value=\"love\">Love</option>\n                            <option value=\"celebration\">Celebration</option>\n                            <option value=\"happiness\">Happiness</option>\n                            <option value=\"sadness\">Sadness</option>\n                            <option value='throwback'>ThrowBack</option>\n                            <option value=\"general\">General</option>\n                        </select>\n                        </label>\n\n                <div className='form-error'>\n                    {uploadData.category.error ? \n                    (<div>{uploadData.category.error}</div>): null}\n                </div>\n                </div>\n\n                <div className='password-wrapper'>\n                    <label htmlFor='description'>Caption</label>\n                   <textarea name=\"description\" onChange={handleChange} />\n                </div>\n                <div className='form-error'>\n                    {uploadData.description.error ? (\n                        <div>{uploadData.description.error}</div> \n                    ): null}\n                </div>\n\n                <div className='image-wrapper'>\n                    <i className=\"fas fa-upload icon\"></i>\n                    <label htmlFor='image' className='customed-upload'>\n                    <input\n                        id='image'\n                        name='image'\n                        type='file'\n                        onChange={handleChange}\n                    />\n                    <div className='upload-label'>Upload image</div>\n\n                    </label>\n                   \n                </div>\n                <div className='form-error'>\n                {uploadData.image.error ? uploadData.image.error : null }\n                \n                {uploadData.image.value && (<div className='image-name'>{uploadData.image.value.name}</div>)}\n                </div>\n                <div className='cancel-signup-wrapper'>\n                    <div className='cancel-signup' onClick={handleUpload}>Cancel</div>\n                    <button className='signup-submit' type='submit'>{loading ? <Loading /> : 'Submit'}</button>\n                  \n                </div>\n            </form>\n            {error && (<div className='reducer-error'>{error}</div>)}\n        </div>\n    </div>\n    )\n}\n\nexport default UploadImage"]},"metadata":{},"sourceType":"module"}