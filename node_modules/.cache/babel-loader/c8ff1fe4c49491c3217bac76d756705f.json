{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport auth from './reducer/authReducer';\nimport images from './reducer/images';\nimport singleImage from './reducer/singleImageReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension'; // redux-persist configuration\n\nconst persistConfig = {\n  key: 'root',\n  storage\n}; // the combine reducers\n\nconst reducers = combineReducers({\n  auth,\n  images,\n  singleImage\n});\nconst persistedReducer = persistReducer(persist);\nexport const store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));","map":{"version":3,"sources":["/home/mayor/gidiShare2/frontend/src/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","persistReducer","persistStore","storage","auth","images","singleImage","composeWithDevTools","persistConfig","key","reducers","persistedReducer","persist","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,cAAR,EAAwBC,YAAxB,QAA2C,eAA3C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC,C,CAEA;;AACA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBN,EAAAA;AAFkB,CAAtB,C,CAMA;;AACA,MAAMO,QAAQ,GAAGZ,eAAe,CAAC;AAC7BM,EAAAA,IAD6B;AAE9BC,EAAAA,MAF8B;AAG7BC,EAAAA;AAH6B,CAAD,CAAhC;AAMA,MAAMK,gBAAgB,GAAGV,cAAc,CAACW,OAAD,CAAvC;AACA,OAAO,MAAMC,KAAK,GAAGhB,WAAW,CAACa,QAAD,EAAWH,mBAAmB,CAACR,eAAe,CAACC,KAAD,CAAhB,CAA9B,CAAzB","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {persistReducer, persistStore} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport auth from './reducer/authReducer'\nimport images from './reducer/images'\nimport singleImage from './reducer/singleImageReducer'\nimport {composeWithDevTools} from 'redux-devtools-extension'\n\n// redux-persist configuration\nconst persistConfig = {\n    key: 'root',\n    storage,\n  }\n   \n\n// the combine reducers\nconst reducers = combineReducers({\n    auth,\n   images,\n    singleImage\n})\n \nconst persistedReducer = persistReducer(persist)\nexport const store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)))\n\n\n"]},"metadata":{},"sourceType":"module"}