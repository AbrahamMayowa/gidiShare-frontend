{"ast":null,"code":"var _jsxFileName = \"/home/mayor/gidiShare2/frontend/src/screen/ImageDetails.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport ImageCard from '../components/ImageCard';\nimport singleImageThunk from '../redux/action/singleImageThunk';\nimport singleImageFetch from '../redux/action/singleImageThunk';\nimport Loading from '../components/Loading';\nimport Error from '../components/Error';\n\nclass DetailsScreen extends React.Component {\n  constructor(props) {\n    super(props);\n  } //const singleImage = this.props.singleImage\n  //const {loading, error} = {...singleImage}\n  //const id = props.match.params.id\n  //const dispatch = useDispatch()\n\n\n  componentDidMount() {\n    const id = this.props.match.params;\n    this.props.dispatch(singleImageFetch(id));\n  }\n\n  render() {\n    const singleImage = this.props.singleImage;\n    cosnt;\n\n    if (loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    }\n\n    if (error) {\n      return React.createElement(Error, {\n        error: error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"image-details-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(ImageCard, {\n      image: singleImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapPropToState = state => {\n  return {\n    singleImage: state.singleImage\n  };\n};\n\nexport default withRouter(connect(mapPropToState)(DetailsScreen));","map":{"version":3,"sources":["/home/mayor/gidiShare2/frontend/src/screen/ImageDetails.js"],"names":["React","useEffect","connect","withRouter","ImageCard","singleImageThunk","singleImageFetch","Loading","Error","DetailsScreen","Component","constructor","props","componentDidMount","id","match","params","dispatch","render","singleImage","cosnt","loading","error","mapPropToState","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,MAAMC,aAAN,SAA4BT,KAAK,CAACU,SAAlC,CAA2C;AAEvCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH,GAJsC,CAMvC;AACA;AACA;AACA;;;AAEAC,EAAAA,iBAAiB,GAAE;AACf,UAAMC,EAAE,GAAG,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAA5B;AACA,SAAKJ,KAAL,CAAWK,QAAX,CAAoBX,gBAAgB,CAACQ,EAAD,CAApC;AACH;;AAEDI,EAAAA,MAAM,GAAE;AACJ,UAAMC,WAAW,GAAG,KAAKP,KAAL,CAAWO,WAA/B;AACAC,IAAAA,KAAK;;AAET,QAAGC,OAAH,EAAW;AACP,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,QAAGC,KAAH,EAAS;AACL,aAAO,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,WACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEH,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAMH;;AAlC0C;;AAqC3C,MAAMI,cAAc,GAAGC,KAAK,IAAG;AAC3B,SAAO;AACHL,IAAAA,WAAW,EAAEK,KAAK,CAACL;AADhB,GAAP;AAGH,CAJD;;AAMA,eAAehB,UAAU,CAACD,OAAO,CAACqB,cAAD,CAAP,CAAwBd,aAAxB,CAAD,CAAzB","sourcesContent":["import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router-dom'\nimport ImageCard from '../components/ImageCard'\nimport singleImageThunk from '../redux/action/singleImageThunk'\nimport singleImageFetch from '../redux/action/singleImageThunk'\nimport Loading from '../components/Loading'\nimport Error from '../components/Error'\n\nclass DetailsScreen extends React.Component{\n\n    constructor(props){\n        super(props)\n    }\n\n    //const singleImage = this.props.singleImage\n    //const {loading, error} = {...singleImage}\n    //const id = props.match.params.id\n    //const dispatch = useDispatch()\n\n    componentDidMount(){\n        const id = this.props.match.params\n        this.props.dispatch(singleImageFetch(id))\n    }\n\n    render(){\n        const singleImage = this.props.singleImage\n        cosnt \n    \n    if(loading){\n        return <Loading />\n    }\n\n    if(error){\n        return <Error error={error} />\n    }\n    \n    return (\n        <div className='image-details-wrapper'>\n            <ImageCard image={singleImage} />\n        </div>\n    )\n\n}\n}\n\nconst mapPropToState = state =>{\n    return {\n        singleImage: state.singleImage\n    }\n}\n\nexport default withRouter(connect(mapPropToState)(DetailsScreen))"]},"metadata":{},"sourceType":"module"}