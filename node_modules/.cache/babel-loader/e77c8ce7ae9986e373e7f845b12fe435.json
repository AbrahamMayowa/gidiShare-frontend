{"ast":null,"code":"import _slicedToArray from \"/home/mayor/gidiShare2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mayor/gidiShare2/frontend/src/components/HeaderSection.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/header.css';\nimport { store } from '../redux/store';\n\nconst Header = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        search = _useState2[0],\n        setSearch = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userImageUrl = _useState4[0],\n        setUserImageUrl = _useState4[1];\n\n  const authToken = useSelector(store => store.auth.token);\n  let history = useHistory();\n\n  const handleSearchSubmit = () => {\n    if (search.trim().length > 0) {} // send query for the search\n    /// set feedback messages from the parent component\n\n  };\n\n  const openUploadModal = () => {\n    //props.handleUpload()\n    console.log(history);\n    history.push(\"/upload\");\n  };\n\n  useEffect(() => {\n    const propsImage = props.userImageUrl;\n    let userImage = \"/avatar.svg\";\n\n    if (propsImage) {\n      userImage = `http://localhost:5000/static/${propsImage}`;\n    }\n\n    setUserImageUrl(userImage);\n  }, [props.userImageUrl]);\n  return React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: userImageUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"search-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSearchSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Search for image\",\n    type: \"text\",\n    onChange: e => setSearch(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"share-image\",\n    onClick: openUploadModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/shareFile.png\",\n    alt: \"share a image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"photo-string\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Photo\")));\n};\n\nexport default Header;","map":{"version":3,"sources":["/home/mayor/gidiShare2/frontend/src/components/HeaderSection.js"],"names":["React","useState","useEffect","useSelector","useHistory","store","Header","props","search","setSearch","userImageUrl","setUserImageUrl","authToken","auth","token","history","handleSearchSubmit","trim","length","openUploadModal","console","log","push","propsImage","userImage","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAO,sBAAP;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAS;AAAA,oBACQN,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,QACbO,MADa;AAAA,QACLC,SADK;;AAAA,qBAEoBR,QAAQ,CAAC,EAAD,CAF5B;AAAA;AAAA,QAEbS,YAFa;AAAA,QAECC,eAFD;;AAGpB,QAAMC,SAAS,GAAGT,WAAW,CAACE,KAAK,IAAIA,KAAK,CAACQ,IAAN,CAAWC,KAArB,CAA7B;AACA,MAAIC,OAAO,GAAGX,UAAU,EAAxB;;AAEA,QAAMY,kBAAkB,GAAG,MAAK;AAC5B,QAAGR,MAAM,CAACS,IAAP,GAAcC,MAAd,GAAuB,CAA1B,EAA4B,CAE3B,CAFD,CACI;AAGJ;;AACH,GAND;;AAQA,QAAMC,eAAe,GAAG,MAAK;AAErB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACAA,IAAAA,OAAO,CAACO,IAAR,CAAa,SAAb;AAEP,GAND;;AAQApB,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMqB,UAAU,GAAGhB,KAAK,CAACG,YAAzB;AACA,QAAIc,SAAS,GAAG,aAAhB;;AACA,QAAGD,UAAH,EAAc;AACVC,MAAAA,SAAS,GAAI,gCAA+BD,UAAW,EAAvD;AACH;;AACDZ,IAAAA,eAAe,CAACa,SAAD,CAAf;AAEH,GARQ,EAQN,CAACjB,KAAK,CAACG,YAAP,CARM,CAAT;AASA,SACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEA,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAEM,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,WAAW,EAAC,kBAAnB;AAAsC,IAAA,IAAI,EAAC,MAA3C;AAAkD,IAAA,QAAQ,EAAGS,CAAD,IAAOhB,SAAS,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAJJ,EAUI;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,OAAO,EAAER,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,GAAG,EAAC,gBAAT;AAA0B,IAAA,GAAG,EAAC,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFA,CAVJ,CADJ;AAiBH,CAhDD;;AAkDA,eAAeb,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useSelector} from 'react-redux'\nimport {useHistory} from 'react-router-dom'\nimport '../styles/header.css'\nimport { store } from '../redux/store'\n\n\nconst Header = (props)=>{\n    const [search, setSearch] = useState('')\n    const [userImageUrl, setUserImageUrl] = useState('')\n    const authToken = useSelector(store => store.auth.token)\n    let history = useHistory()\n\n    const handleSearchSubmit = () =>{\n        if(search.trim().length > 0){\n            // send query for the search\n        }\n\n        /// set feedback messages from the parent component\n    }\n\n    const openUploadModal = () =>{\n        \n            //props.handleUpload()\n            console.log(history)\n            history.push(\"/upload\")\n    \n    }\n\n    useEffect(() =>{\n        const propsImage = props.userImageUrl\n        let userImage = \"/avatar.svg\"\n        if(propsImage){\n            userImage = `http://localhost:5000/static/${propsImage}`\n        }\n        setUserImageUrl(userImage)\n        \n    }, [props.userImageUrl])\n    return(\n        <div className='header'>\n            <div className='header-image'>\n                <img src={userImageUrl} />\n            </div>\n            <div className='search-header'>\n                <form onSubmit={handleSearchSubmit}>\n                    <input placeholder='Search for image' type='text' onChange={(e) => setSearch(e.target.value)}/>\n                </form>\n            </div>\n\n            <div className='share-image' onClick={openUploadModal}>\n            <img src='/shareFile.png' alt='share a image' /> \n            <div className='photo-string'>Photo</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header"]},"metadata":{},"sourceType":"module"}