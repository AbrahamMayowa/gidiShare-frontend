{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport auth from './reducer/authReducer';\nimport images from './reducer/images';\nimport singleImage from './reducer/singleImageReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension'; // the combine reducers\n\nconst reducers = combineReducers({\n  auth,\n  images,\n  singleImage\n}); // redux-persist configuration\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['auth']\n};\nconst persistedReducer = persistReducer(persistConfig, reducers);\nexport default (() => {\n  let store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)));\n  let persistor = persistStore(store);\n  return {\n    store\n  };\n});","map":{"version":3,"sources":["/Users/mayowa/Desktop/gidiShare-update/api/gidiShare-frontend/src/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","persistReducer","persistStore","storage","auth","images","singleImage","composeWithDevTools","reducers","persistConfig","key","whitelist","persistedReducer","store","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,cAAR,EAAwBC,YAAxB,QAA2C,eAA3C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC,C,CAGA;;AACA,MAAMC,QAAQ,GAAGV,eAAe,CAAC;AAC/BM,EAAAA,IAD+B;AAEhCC,EAAAA,MAFgC;AAG/BC,EAAAA;AAH+B,CAAD,CAAhC,C,CAKA;;AACA,MAAMG,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBP,EAAAA,OAFkB;AAGlBQ,EAAAA,SAAS,EAAE,CAAC,MAAD;AAHO,CAAtB;AASA,MAAMC,gBAAgB,GAAGX,cAAc,CAACQ,aAAD,EAAgBD,QAAhB,CAAvC;AAEA,gBAAe,MAAK;AAClB,MAAIK,KAAK,GAAGhB,WAAW,CAACe,gBAAD,EAAmBL,mBAAmB,CAACR,eAAe,CAACC,KAAD,CAAhB,CAAtC,CAAvB;AACA,MAAIc,SAAS,GAAGZ,YAAY,CAACW,KAAD,CAA5B;AACA,SAAO;AAACA,IAAAA;AAAD,GAAP;AACD,CAJD","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {persistReducer, persistStore} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport auth from './reducer/authReducer'\nimport images from './reducer/images'\nimport singleImage from './reducer/singleImageReducer'\nimport {composeWithDevTools} from 'redux-devtools-extension'\n\n\n// the combine reducers\nconst reducers = combineReducers({\n  auth,\n images,\n  singleImage\n})\n// redux-persist configuration\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['auth']\n  }\n   \n\n\n \nconst persistedReducer = persistReducer(persistConfig, reducers)\n\nexport default () =>{\n  let store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)))\n  let persistor = persistStore(store)\n  return {store, }\n}\n"]},"metadata":{},"sourceType":"module"}