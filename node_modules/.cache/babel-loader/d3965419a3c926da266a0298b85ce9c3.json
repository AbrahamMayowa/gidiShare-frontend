{"ast":null,"code":"import { logoutFail, logoutSuccess, logoutStart } from './logout';\n\nconst logoutDispatch = token => {\n  return async dispatch => {\n    const graphqlQuery = {\n      query: `\n            mutation {\n                logout\n            }`\n    };\n\n    try {\n      dispatch(logoutStart());\n      const fetchResponse = await fetch('http://localhost:5000/graphql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        },\n        body: JSON.stringify(graphqlQuery)\n      });\n      const resData = await fetchResponse.json();\n\n      if (resData.errors) {\n        if (resData.errors[0].status === 401) {\n          throw Error('You are not authorized');\n        }\n\n        throw Error('User not found');\n      }\n\n      dispatch(logoutSuccess(resData));\n    } catch (error) {\n      dispatch(logoutFail(error));\n    }\n  };\n};\n\nexport default logoutDispatch;","map":{"version":3,"sources":["/home/mayor/gidiShare/frontend/src/redux/action/logoutThunk.js"],"names":["logoutFail","logoutSuccess","logoutStart","logoutDispatch","token","dispatch","graphqlQuery","query","fetchResponse","fetch","method","headers","Authorization","body","JSON","stringify","resData","json","errors","status","Error","error"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,aAApB,EAAmCC,WAAnC,QAAqD,UAArD;;AAGA,MAAMC,cAAc,GAAIC,KAAD,IAAS;AAC5B,SAAO,MAAMC,QAAN,IAAiB;AACpB,UAAMC,YAAY,GAAG;AACjBC,MAAAA,KAAK,EAAG;;;;AADS,KAArB;;AAOA,QAAG;AACCF,MAAAA,QAAQ,CAACH,WAAW,EAAZ,CAAR;AACR,YAAMM,aAAa,GAAG,MAAMC,KAAK,CAAC,+BAAD,EAAkC;AAC/DC,QAAAA,MAAM,EAAE,MADuD;AAE/DC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAELC,UAAAA,aAAa,EAAE,YAAYR;AAFtB,SAFsD;AAM/DS,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,YAAf;AANyD,OAAlC,CAAjC;AAQA,YAAMU,OAAO,GAAG,MAAMR,aAAa,CAACS,IAAd,EAAtB;;AACA,UAAGD,OAAO,CAACE,MAAX,EAAkB;AAClB,YAAGF,OAAO,CAACE,MAAR,CAAe,CAAf,EAAkBC,MAAlB,KAA6B,GAAhC,EAAoC;AAChC,gBAAMC,KAAK,CAAC,wBAAD,CAAX;AACH;;AACD,cAAMA,KAAK,CAAC,gBAAD,CAAX;AACC;;AACDf,MAAAA,QAAQ,CAACJ,aAAa,CAACe,OAAD,CAAd,CAAR;AACC,KAlBG,CAkBH,OAAMK,KAAN,EAAY;AACThB,MAAAA,QAAQ,CAACL,UAAU,CAACqB,KAAD,CAAX,CAAR;AACH;AAEA,GA9BD;AA+BH,CAhCD;;AAkCA,eAAelB,cAAf","sourcesContent":["import {logoutFail, logoutSuccess, logoutStart} from './logout'\n\n\nconst logoutDispatch = (token)=>{\n    return async dispatch =>{\n        const graphqlQuery = {\n            query: `\n            mutation {\n                logout\n            }`\n        }\n\n        try{\n            dispatch(logoutStart())\n    const fetchResponse = await fetch('http://localhost:5000/graphql', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer ' + token   \n        },\n        body: JSON.stringify(graphqlQuery)\n    })\n    const resData = await fetchResponse.json()\n    if(resData.errors){\n    if(resData.errors[0].status === 401){\n        throw Error('You are not authorized')\n    }\n    throw Error('User not found')\n    }\n    dispatch(logoutSuccess(resData))\n    }catch(error){\n        dispatch(logoutFail(error))\n    }\n\n    }\n}\n\nexport default logoutDispatch"]},"metadata":{},"sourceType":"module"}