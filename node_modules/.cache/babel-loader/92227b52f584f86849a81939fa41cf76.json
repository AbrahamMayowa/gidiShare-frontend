{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware}from'redux';import thunk from'redux-thunk';import{persistReducer,persistStore}from'redux-persist';import storage from'redux-persist/lib/storage';import auth from'./reducer/authReducer';import images from'./reducer/images';import singleImage from'./reducer/singleImageReducer';import{composeWithDevTools}from'redux-devtools-extension';// redux-persist configuration\nvar persistConfig={key:'root',storage:storage,whitelist:['auth']};// the combine reducers\nvar reducers=combineReducers({auth:auth,images:images,singleImage:singleImage});var persistedReducer=persistReducer(persistConfig,reducers);export var store=createStore(persistedReducer,composeWithDevTools(applyMiddleware(thunk)));export var persistor=persistStore(store);","map":{"version":3,"sources":["/Users/mayowa/Desktop/gidiShare-update/api/gidiShare-frontend/src/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","persistReducer","persistStore","storage","auth","images","singleImage","composeWithDevTools","persistConfig","key","whitelist","reducers","persistedReducer","store","persistor"],"mappings":"AAAA,OAAQA,WAAR,CAAqBC,eAArB,CAAsCC,eAAtC,KAA4D,OAA5D,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAAQC,cAAR,CAAwBC,YAAxB,KAA2C,eAA3C,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,uBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,8BAAxB,CACA,OAAQC,mBAAR,KAAkC,0BAAlC,CAEA;AACA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,GAAG,CAAE,MADa,CAElBN,OAAO,CAAPA,OAFkB,CAGlBO,SAAS,CAAE,CAAC,MAAD,CAHO,CAAtB,CAOA;AACA,GAAMC,CAAAA,QAAQ,CAAGb,eAAe,CAAC,CAC7BM,IAAI,CAAJA,IAD6B,CAE9BC,MAAM,CAANA,MAF8B,CAG7BC,WAAW,CAAXA,WAH6B,CAAD,CAAhC,CAMA,GAAMM,CAAAA,gBAAgB,CAAGX,cAAc,CAACO,aAAD,CAAgBG,QAAhB,CAAvC,CACA,MAAO,IAAME,CAAAA,KAAK,CAAGhB,WAAW,CAACe,gBAAD,CAAmBL,mBAAmB,CAACR,eAAe,CAACC,KAAD,CAAhB,CAAtC,CAAzB,CACP,MAAO,IAAMc,CAAAA,SAAS,CAAGZ,YAAY,CAACW,KAAD,CAA9B","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {persistReducer, persistStore} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport auth from './reducer/authReducer'\nimport images from './reducer/images'\nimport singleImage from './reducer/singleImageReducer'\nimport {composeWithDevTools} from 'redux-devtools-extension'\n\n// redux-persist configuration\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['auth']\n  }\n   \n\n// the combine reducers\nconst reducers = combineReducers({\n    auth,\n   images,\n    singleImage\n})\n \nconst persistedReducer = persistReducer(persistConfig, reducers)\nexport const store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)))\nexport const persistor = persistStore(store)\n"]},"metadata":{},"sourceType":"module"}