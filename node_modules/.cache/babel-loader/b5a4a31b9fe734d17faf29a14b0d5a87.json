{"ast":null,"code":"var _jsxFileName = \"/home/mayor/gidiShare2/frontend/src/screen/ImageList.js\";\nimport React from 'react';\nimport ImageCard from '../components/ImageCard';\nimport Header from '../components/HeaderSection';\nimport { connect } from 'react-redux';\nimport Loading from '../components/Loading';\nimport NoItem from '../components/NoItem';\nimport imageListThunk from '../redux/action/imageListActionThunk';\n\nclass Images extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(imageListThunk());\n  }\n\n  render() {\n    const _this$props$images = this.props.images,\n          images = _this$props$images.images,\n          loading = _this$props$images.loading;\n    const imageUrl = this.props.auth.imageUrl;\n    let noImageOrImageCard = React.createElement(NoItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n\n    if (images.length > 0) {\n      noImageOrImageCard = images.map(image => React.createElement(ImageCard, {\n        image: image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, loading ? React.createElement(\"div\", {\n      className: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"noImageOrImageCard\")));\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    auth: state.auth,\n    images: state.images\n  };\n};\n\nexport default connect(mapState)(Images);","map":{"version":3,"sources":["/home/mayor/gidiShare2/frontend/src/screen/ImageList.js"],"names":["React","ImageCard","Header","connect","Loading","NoItem","imageListThunk","Images","Component","componentDidMount","props","dispatch","render","images","loading","imageUrl","auth","noImageOrImageCard","length","map","image","mapState","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;AAGA,MAAMC,MAAN,SAAqBP,KAAK,CAACQ,SAA3B,CAAoC;AAEhCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWC,QAAX,CAAoBL,cAAc,EAAlC;AAEH;;AAEDM,EAAAA,MAAM,GAAE;AAAA,+BACsB,KAAKF,KAAL,CAAWG,MADjC;AAAA,UACGA,MADH,sBACGA,MADH;AAAA,UACWC,OADX,sBACWA,OADX;AAAA,UAEGC,QAFH,GAEe,KAAKL,KAAL,CAAWM,IAF1B,CAEGD,QAFH;AAIJ,QAAIE,kBAAkB,GAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB;;AAEA,QAAGJ,MAAM,CAACK,MAAP,GAAgB,CAAnB,EAAqB;AACjBD,MAAAA,kBAAkB,GAAGJ,MAAM,CAACM,GAAP,CAAWC,KAAK,IAAI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAEA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApB,CAArB;AACH;;AAED,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,OAAO,GAAG;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,CAAH,GAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAD5D,CADJ,CADA;AAQH;;AAzB+B;;AA6BpC,MAAMO,QAAQ,GAAIC,KAAD,IAAW;AACxB,SAAO;AACHN,IAAAA,IAAI,EAAEM,KAAK,CAACN,IADT;AAEHH,IAAAA,MAAM,EAAES,KAAK,CAACT;AAFX,GAAP;AAKH,CAND;;AAQA,eAAeV,OAAO,CAACkB,QAAD,CAAP,CAAkBd,MAAlB,CAAf","sourcesContent":["import React from 'react'\nimport ImageCard from '../components/ImageCard'\nimport Header from '../components/HeaderSection'\nimport {connect} from 'react-redux'\nimport Loading from '../components/Loading'\nimport NoItem from '../components/NoItem'\nimport imageListThunk from '../redux/action/imageListActionThunk'\n\n\nclass Images extends React.Component{\n\n    componentDidMount(){\n        this.props.dispatch(imageListThunk())\n\n    }\n\n    render(){\n        const {images, loading} = this.props.images\n        const {imageUrl} = this.props.auth\n\n        let noImageOrImageCard = <NoItem />\n\n        if(images.length > 0){\n            noImageOrImageCard = images.map(image => <ImageCard image={image} />)\n        }\n\n        return (\n        <div>\n            <section >\n                {loading ? <div className='loading'><Loading /></div> : <div>noImageOrImageCard</div>}\n            </section>\n            </div>\n\n        )\n    }\n\n}\n\nconst mapState = (state) => {\n    return {\n        auth: state.auth,\n        images: state.images\n\n    }\n}\n\nexport default connect(mapState)(Images)"]},"metadata":{},"sourceType":"module"}