{"ast":null,"code":"import _slicedToArray from \"/home/mayor/gidiShare2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mayor/gidiShare2/frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store } from './redux/store';\nimport { useStore } from 'react-redux';\nimport SignupForm from './components/signupModal';\nimport ImageDetails from './screen/ImageDetails';\nimport LoginForm from './components/Login';\nimport UploadForm from './components/UploadForm';\nimport './styles/App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ImageList from '../src/screen/ImageList';\n\nfunction App() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        openLoginModal = _useState2[0],\n        setOpenLogininModal = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        openSignupModal = _useState4[0],\n        setOpenSignupModal = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        openUploadFormModal = _useState6[0],\n        setOpenUploadFormModal = _useState6[1];\n\n  const auth = store.getState().auth.token;\n\n  const handleLoginModal = () => {\n    if (openLoginModal) {\n      setOpenLogininModal(false);\n    } else {\n      setOpenLogininModal(true);\n    }\n  };\n\n  const handleSignupModal = () => {\n    if (openSignupModal) {\n      setOpenSignupModal(false);\n    } else {\n      setOpenSignupModal(true);\n    }\n  };\n\n  const handleUploadModal = () => {\n    setOpenUploadFormModal(prevState => !prevState);\n  };\n\n  let loginAndSignup = React.createElement(\"div\", {\n    className: \"logout-and-signin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"login nav-box\",\n    onClick: handleLoginModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"li\", {\n    className: \"sign-up nav-box\",\n    onClick: handleSignupModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Signup\"))); //const store = storeConfig().store\n  //const persistor = storeConfig().persistor\n\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    className: \"nav-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"website-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"gidiShare\"), auth ? React.createElement(\"div\", {\n    className: \"logout nav-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Logout\") : loginAndSignup), React.createElement(\"div\", {\n    className: \"main-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: openSignupModal ? 'signup-modal-open' : 'signup-modal-close',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(SignupForm, {\n    handleSignup: handleSignupModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"section\", {\n    className: openLoginModal ? 'login-modal-open' : 'login-modal-close',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(LoginForm, {\n    handleLogin: handleLoginModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(\"section\", {\n    className: openUploadFormModal ? 'upload-open' : 'upload-close',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(UploadForm, {\n    handleUpload: handleUploadModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/details:id\",\n    exact: true,\n    render: props => React.createElement(Image, Object.assign({\n      handleLogin: handleLoginModal,\n      handleUploadForm: handleUploadModal\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), \"/>\", React.createElement(Route, {\n    path: \"/\",\n    render: props => React.createElement(ImageList, Object.assign({\n      handleLogin: handleLoginModal,\n      handleUploadForm: handleUploadModal\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), \"/>\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mayor/gidiShare2/frontend/src/App.js"],"names":["React","useState","useEffect","Provider","PersistGate","store","useStore","SignupForm","ImageDetails","LoginForm","UploadForm","BrowserRouter","Router","Switch","Route","ImageList","App","openLoginModal","setOpenLogininModal","openSignupModal","setOpenSignupModal","openUploadFormModal","setOpenUploadFormModal","auth","getState","token","handleLoginModal","handleSignupModal","handleUploadModal","prevState","loginAndSignup","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {Provider} from 'react-redux'\nimport {PersistGate} from 'redux-persist/integration/react'\nimport {store} from './redux/store'\nimport {useStore} from 'react-redux'\nimport SignupForm from './components/signupModal'\nimport ImageDetails from './screen/ImageDetails'\nimport LoginForm from './components/Login'\nimport UploadForm from './components/UploadForm'\n\nimport './styles/App.css'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport ImageList from '../src/screen/ImageList'\n\n\n\nfunction App() {\n\n  const [openLoginModal, setOpenLogininModal] = useState(false)\n  const [openSignupModal, setOpenSignupModal] = useState(false)\n  const [openUploadFormModal, setOpenUploadFormModal] = useState(false)\n\n  const auth = store.getState().auth.token\n\n\n  const handleLoginModal = () =>{\n    if(openLoginModal){\n      setOpenLogininModal(false)\n    }else{setOpenLogininModal(true)}\n  }\n\n  const handleSignupModal = () =>{\n    if(openSignupModal){\n      setOpenSignupModal(false)\n\n    }else{setOpenSignupModal(true)}\n  }\n\n  const handleUploadModal = () =>{\n    setOpenUploadFormModal(prevState => !prevState)\n  }\n\n\n  let loginAndSignup = (<div className='logout-and-signin'>\n    <ul>\n    <li className=\"login nav-box\" onClick={handleLoginModal}>Login</li>\n    <li className=\"sign-up nav-box\" onClick={handleSignupModal}>Signup</li>\n    </ul>\n  </div>)\n\n\n  //const store = storeConfig().store\n  //const persistor = storeConfig().persistor\n  return (\n    <Provider store={store}>\n\n      <nav className='nav-wrapper'>\n          <div className='website-name'>gidiShare</div>\n          {auth ? <div className=\"logout nav-box\">Logout</div> : loginAndSignup}\n      </nav>\n\n      <div className='main-body'>\n      <section className={(openSignupModal ? 'signup-modal-open' : 'signup-modal-close')}>\n        <SignupForm handleSignup={handleSignupModal} />\n      </section>\n\n      <section className={(openLoginModal ? 'login-modal-open' : 'login-modal-close')}>\n        <LoginForm handleLogin={handleLoginModal} />\n      </section>\n\n      <section className={(openUploadFormModal ? 'upload-open' : 'upload-close')}>\n        <UploadForm handleUpload={handleUploadModal} />\n      </section>\n\n      <Switch>\n        <Route path='/details:id' exact render={props => <Image handleLogin={handleLoginModal} handleUploadForm={handleUploadModal} {...props} />} />/>\n        <Route path='/' render={props => <ImageList handleLogin={handleLoginModal} handleUploadForm={handleUploadModal} {...props} />} />/>\n      </Switch>\n      </div>\n  </Provider>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}