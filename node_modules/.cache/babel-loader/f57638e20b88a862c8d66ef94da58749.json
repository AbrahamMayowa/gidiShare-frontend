{"ast":null,"code":"import _slicedToArray from\"/Users/mayowa/Desktop/gidiShare-update/api/gidiShare-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{NavLink}from'react-router-dom';import{persistor}from'../redux/store';import SignupForm from'../components/signupModal';import ImageDetails from'../screen/ImageDetails';import UploadScreen from'../screen/UploadScreen';import LoginForm from'../components/Login';import UploadForm from'../components/UploadForm';import'../styles/App.css';import{BrowserRouter as Router,Switch,Route}from\"react-router-dom\";import ImageList from'./ImageList';import logoutDispatch from'../redux/action/logoutThunk';import refreshTokenThunk from'../redux/action/refreshTokenThunk';function ScreenWrapper(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),openLoginModal=_useState2[0],setOpenLogininModal=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),openSignupModal=_useState4[0],setOpenSignupModal=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),openUploadFormModal=_useState6[0],setOpenUploadFormModal=_useState6[1];var _useSelector=useSelector(function(store){return store.auth;}),isAuth=_useSelector.isAuth,refreshToken=_useSelector.refreshToken,userId=_useSelector.userId,token=_useSelector.token,expiresIn=_useSelector.expiresIn;var dispatch=useDispatch();// this useEffect prevent logininModal from being true when user click logout\nuseEffect(function(){setOpenLogininModal(false);},[isAuth]);var dispatchRefresh=function dispatchRefresh(){dispatch(refreshTokenThunk(refreshToken,userId));};useEffect(function(){// create new valid token when the expiration time has passed\nif(refreshToken){var newTokenTimeout;var expirationDate=new Date(parseInt(expiresIn)).getTime();var currentDate=Date.now();if(currentDate>expirationDate){newTokenTimeout=setTimeout(dispatchRefresh,100);return function(){return clearTimeout(newTokenTimeout);};}}},[]);useEffect(function(){/// refreshToken setInterval\n//set setInterval for to get new token after successfully logIn\nif(refreshToken){var timeoutId=setInterval(dispatchRefresh,720000);return function(){return clearTimeout(timeoutId);};}},[refreshToken]);var handleLoginModal=function handleLoginModal(){if(openLoginModal){dispatch({type:'CLEAR_ERROR'});setOpenLogininModal(false);}else{setOpenLogininModal(true);}};var handleSignupModal=function handleSignupModal(){if(openSignupModal){dispatch({type:'CLEAR_ERROR'});setOpenSignupModal(false);}else{setOpenSignupModal(true);}};var handleUploadModal=function handleUploadModal(){if(openUploadFormModal){dispatch({type:'CLEAR_ERROR'});setOpenUploadFormModal(false);}else{setOpenUploadFormModal(true);}};var signout=function signout(){persistor.purge();dispatch(logoutDispatch(token));};var loginAndSignup=React.createElement(\"div\",{className:\"logout-and-signin\"},React.createElement(\"ul\",null,React.createElement(\"li\",{className:\"login nav-box\",onClick:handleLoginModal},\"Login\"),React.createElement(\"li\",{className:\"sign-up nav-box\",onClick:handleSignupModal},\"Signup\")));return React.createElement(\"div\",null,React.createElement(\"nav\",{className:\"nav-wrapper\"},React.createElement(NavLink,{className:\"website-name\",to:\"/\"},\"gidiShare\"),isAuth?React.createElement(\"div\",{className:\"logout nav-box\",onClick:signout},\"Logout\"):loginAndSignup),React.createElement(\"div\",{className:\"main-body\"},React.createElement(\"section\",{className:openSignupModal?'signup-modal-open':'signup-modal-close'},React.createElement(SignupForm,{handleSignup:handleSignupModal})),React.createElement(\"section\",{className:openLoginModal?'login-modal-open':'login-modal-close'},React.createElement(LoginForm,{handleLogin:handleLoginModal})),React.createElement(\"section\",{className:openUploadFormModal?'upload-open':'upload-close'},React.createElement(UploadForm,{handleUpload:handleUploadModal})),React.createElement(Switch,null,React.createElement(Route,{path:\"/details/:id\",exact:true,render:function render(props){return React.createElement(ImageDetails,Object.assign({handleLogin:handleLoginModal,handleUploadForm:handleUploadModal},props));}}),\"/>\",React.createElement(Route,{path:\"/upload\",exact:true,component:UploadScreen}),React.createElement(Route,{path:\"/\",exact:true,render:function render(props){return React.createElement(ImageList,Object.assign({handleLogin:handleLoginModal,handleUploadForm:handleUploadModal},props));}}),\"/>\")));}export default ScreenWrapper;","map":{"version":3,"sources":["/Users/mayowa/Desktop/gidiShare-update/api/gidiShare-frontend/src/screen/ScreenWrapper.js"],"names":["React","useState","useEffect","useSelector","useDispatch","NavLink","persistor","SignupForm","ImageDetails","UploadScreen","LoginForm","UploadForm","BrowserRouter","Router","Switch","Route","ImageList","logoutDispatch","refreshTokenThunk","ScreenWrapper","openLoginModal","setOpenLogininModal","openSignupModal","setOpenSignupModal","openUploadFormModal","setOpenUploadFormModal","store","auth","isAuth","refreshToken","userId","token","expiresIn","dispatch","dispatchRefresh","newTokenTimeout","expirationDate","Date","parseInt","getTime","currentDate","now","setTimeout","clearTimeout","timeoutId","setInterval","handleLoginModal","type","handleSignupModal","handleUploadModal","signout","purge","loginAndSignup","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {NavLink} from 'react-router-dom'\nimport {persistor} from '../redux/store'\nimport SignupForm from '../components/signupModal'\nimport ImageDetails from '../screen/ImageDetails'\nimport UploadScreen from '../screen/UploadScreen'\nimport LoginForm from '../components/Login'\nimport UploadForm from '../components/UploadForm'\n\n\nimport '../styles/App.css'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport ImageList from './ImageList'\nimport logoutDispatch from '../redux/action/logoutThunk'\nimport refreshTokenThunk from '../redux/action/refreshTokenThunk'\n\n\n\nfunction ScreenWrapper() {\n\n  const [openLoginModal, setOpenLogininModal] = useState(false)\n  const [openSignupModal, setOpenSignupModal] = useState(false)\n  const [openUploadFormModal, setOpenUploadFormModal] = useState(false)\n\n  const {isAuth, refreshToken, userId, token, expiresIn} = useSelector(store => store.auth)\n  const dispatch = useDispatch()\n\n  // this useEffect prevent logininModal from being true when user click logout\n  useEffect(()=>{\n      setOpenLogininModal(false)\n  }, [isAuth])\n\n\n  const dispatchRefresh = ()=>{\n    dispatch(refreshTokenThunk(refreshToken, userId))\n  }\n\n    \n\nuseEffect(()=>{\n    // create new valid token when the expiration time has passed\n    if(refreshToken){\n      let newTokenTimeout\n      const expirationDate = new Date(parseInt(expiresIn)).getTime()\n      const currentDate = Date.now()\n      if(currentDate > expirationDate){\n        newTokenTimeout = setTimeout(dispatchRefresh, 100)\n        return ()=> clearTimeout(newTokenTimeout)\n      }\n    }\n}, [])\n\n  useEffect(()=> {\n    /// refreshToken setInterval\n  //set setInterval for to get new token after successfully logIn\n    if(refreshToken){\n      let timeoutId = setInterval(dispatchRefresh, 720000)\n      return ()=> clearTimeout(timeoutId)\n    }\n  }, [refreshToken])\n\n  const handleLoginModal = () =>{\n    if(openLoginModal){\n      dispatch({type: 'CLEAR_ERROR'})\n      setOpenLogininModal(false)\n    }else{setOpenLogininModal(true)}\n  }\n\n  const handleSignupModal = () =>{\n    if(openSignupModal){\n      dispatch({type: 'CLEAR_ERROR'})\n      setOpenSignupModal(false)\n\n    }else{setOpenSignupModal(true)}\n  }\n\n  const handleUploadModal = () =>{\n    if(openUploadFormModal){\n      dispatch({type: 'CLEAR_ERROR'})\n      setOpenUploadFormModal(false)\n    }else{\n    setOpenUploadFormModal(true)\n    }\n  }\n\n  const signout = ()=>{\n    persistor.purge()\n    dispatch(logoutDispatch(token))\n    \n  }\n\n  let loginAndSignup = (<div className='logout-and-signin'>\n    <ul>\n    <li className=\"login nav-box\" onClick={handleLoginModal}>Login</li>\n    <li className=\"sign-up nav-box\" onClick={handleSignupModal}>Signup</li>\n    </ul>\n  </div>)\n\n  return (\n        <div>\n        <nav className='nav-wrapper'>\n            <NavLink className='website-name' to='/'>gidiShare</NavLink>\n            {isAuth ? <div className=\"logout nav-box\" onClick={signout}>Logout</div> : loginAndSignup}\n        </nav>\n\n        <div className='main-body'>\n        <section className={(openSignupModal ? 'signup-modal-open' : 'signup-modal-close')}>\n          <SignupForm handleSignup={handleSignupModal} />\n        </section>\n\n        <section className={(openLoginModal ? 'login-modal-open' : 'login-modal-close')}>\n          <LoginForm handleLogin={handleLoginModal}/>\n        </section>\n\n        <section className={(openUploadFormModal ? 'upload-open' : 'upload-close')}>\n          <UploadForm handleUpload={handleUploadModal} />\n        </section>\n\n        <Switch>\n        \n          <Route path=\"/details/:id\" exact render={props => <ImageDetails handleLogin={handleLoginModal} handleUploadForm={handleUploadModal} {...props} />} />/>\n          <Route path=\"/upload\" exact component={UploadScreen} />\n          <Route path='/' exact render={props => <ImageList handleLogin={handleLoginModal} handleUploadForm={handleUploadModal} {...props} />} />/>\n        </Switch>\n        </div>\n    </div>\n  )\n}\n\nexport default ScreenWrapper;\n"]},"metadata":{},"sourceType":"module"}