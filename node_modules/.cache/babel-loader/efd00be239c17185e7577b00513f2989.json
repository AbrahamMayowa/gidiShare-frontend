{"ast":null,"code":"import _slicedToArray from \"/home/mayor/gidiShare2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mayor/gidiShare2/frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Provider } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport { useStore } from 'react-redux';\nimport SignupForm from './components/signupModal';\nimport ImageDetails from './screen/ImageDetails';\nimport UploadScreen from './screen/UploadScreen';\nimport LoginForm from './components/Login';\nimport UploadForm from './components/UploadForm';\nimport Loading from './components/Loading';\nimport './styles/App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ImageList from '../src/screen/ImageList';\nimport auth from './redux/reducer/authReducer';\n\nfunction App() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        openLoginModal = _useState2[0],\n        setOpenLogininModal = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        openSignupModal = _useState4[0],\n        setOpenSignupModal = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        openUploadFormModal = _useState6[0],\n        setOpenUploadFormModal = _useState6[1];\n\n  let authen;\n  useEffect(() => {\n    authen = store.getState().auth.token;\n    console.log(auth);\n  }, [auth]);\n\n  const handleLoginModal = () => {\n    if (openLoginModal) {\n      setOpenLogininModal(false);\n    } else {\n      setOpenLogininModal(true);\n    }\n  };\n\n  const handleSignupModal = () => {\n    if (openSignupModal) {\n      setOpenSignupModal(false);\n    } else {\n      setOpenSignupModal(true);\n    }\n  };\n\n  const handleUploadModal = () => {\n    if (openUploadFormModal) {\n      setOpenUploadFormModal(false);\n    } else {\n      setOpenUploadFormModal(true);\n    }\n  };\n\n  const signout = () => {\n    persistor.purge();\n  };\n\n  let loginAndSignup = React.createElement(\"div\", {\n    className: \"logout-and-signin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"login nav-box\",\n    onClick: handleLoginModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"li\", {\n    className: \"sign-up nav-box\",\n    onClick: handleSignupModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Signup\")));\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(PersistGate, {\n    loading: React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }),\n    persistor: persistor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    className: \"nav-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    className: \"website-name\",\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"gidiShare\"), auth ? React.createElement(\"div\", {\n    className: \"logout nav-box\",\n    onClick: signout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Logout\") : loginAndSignup), React.createElement(\"div\", {\n    className: \"main-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: openSignupModal ? 'signup-modal-open' : 'signup-modal-close',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(SignupForm, {\n    handleSignup: handleSignupModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(\"section\", {\n    className: openLoginModal ? 'login-modal-open' : 'login-modal-close',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(LoginForm, {\n    handleLogin: handleLoginModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(\"section\", {\n    className: openUploadFormModal ? 'upload-open' : 'upload-close',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(UploadForm, {\n    handleUpload: handleUploadModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/details/:id\",\n    exact: true,\n    render: props => React.createElement(ImageDetails, Object.assign({\n      handleLogin: handleLoginModal,\n      handleUploadForm: handleUploadModal\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), \"/>\", React.createElement(Route, {\n    path: \"/upload\",\n    exact: true,\n    component: UploadScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    render: props => React.createElement(ImageList, Object.assign({\n      handleLogin: handleLoginModal,\n      handleUploadForm: handleUploadModal\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), \"/>\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mayor/gidiShare2/frontend/src/App.js"],"names":["React","useState","useEffect","Provider","NavLink","PersistGate","store","persistor","useStore","SignupForm","ImageDetails","UploadScreen","LoginForm","UploadForm","Loading","BrowserRouter","Router","Switch","Route","ImageList","auth","App","openLoginModal","setOpenLogininModal","openSignupModal","setOpenSignupModal","openUploadFormModal","setOpenUploadFormModal","authen","getState","token","console","log","handleLoginModal","handleSignupModal","handleUploadModal","signout","purge","loginAndSignup","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {Provider} from 'react-redux'\nimport {NavLink} from 'react-router-dom'\nimport {PersistGate} from 'redux-persist/integration/react'\nimport {store, persistor} from './redux/store'\nimport {useStore} from 'react-redux'\nimport SignupForm from './components/signupModal'\nimport ImageDetails from './screen/ImageDetails'\nimport UploadScreen from './screen/UploadScreen'\nimport LoginForm from './components/Login'\nimport UploadForm from './components/UploadForm'\nimport Loading from './components/Loading'\n\n\nimport './styles/App.css'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport ImageList from '../src/screen/ImageList'\nimport auth from './redux/reducer/authReducer'\n\n\n\nfunction App() {\n\n  const [openLoginModal, setOpenLogininModal] = useState(false)\n  const [openSignupModal, setOpenSignupModal] = useState(false)\n  const [openUploadFormModal, setOpenUploadFormModal] = useState(false)\n\n  let authen;\n\n  useEffect(()=>{\n    authen = store.getState().auth.token\n    console.log(auth)\n  }, [auth])\n\n  const handleLoginModal = () =>{\n    if(openLoginModal){\n      setOpenLogininModal(false)\n    }else{setOpenLogininModal(true)}\n  }\n\n  const handleSignupModal = () =>{\n    if(openSignupModal){\n      setOpenSignupModal(false)\n\n    }else{setOpenSignupModal(true)}\n  }\n\n  const handleUploadModal = () =>{\n    if(openUploadFormModal){\n      setOpenUploadFormModal(false)\n    }else{\n    setOpenUploadFormModal(true)\n    }\n  }\n\n  const signout = ()=>{\n    persistor.purge()\n  }\n\n  let loginAndSignup = (<div className='logout-and-signin'>\n    <ul>\n    <li className=\"login nav-box\" onClick={handleLoginModal}>Login</li>\n    <li className=\"sign-up nav-box\" onClick={handleSignupModal}>Signup</li>\n    </ul>\n  </div>)\n\n  return (\n    \n    <Provider store={store}>\n      <PersistGate loading={<Loading />} persistor={persistor}>\n        <nav className='nav-wrapper'>\n            <NavLink className='website-name' to='/'>gidiShare</NavLink>\n            {auth ? <div className=\"logout nav-box\" onClick={signout}>Logout</div> : loginAndSignup}\n        </nav>\n\n        <div className='main-body'>\n        <section className={(openSignupModal ? 'signup-modal-open' : 'signup-modal-close')}>\n          <SignupForm handleSignup={handleSignupModal} />\n        </section>\n\n        <section className={(openLoginModal ? 'login-modal-open' : 'login-modal-close')}>\n          <LoginForm handleLogin={handleLoginModal} />\n        </section>\n\n        <section className={(openUploadFormModal ? 'upload-open' : 'upload-close')}>\n          <UploadForm handleUpload={handleUploadModal} />\n        </section>\n\n        <Switch>\n        \n          <Route path=\"/details/:id\" exact render={props => <ImageDetails handleLogin={handleLoginModal} handleUploadForm={handleUploadModal} {...props} />} />/>\n          <Route path=\"/upload\" exact component={UploadScreen} />\n          <Route path='/' exact render={props => <ImageList handleLogin={handleLoginModal} handleUploadForm={handleUploadModal} {...props} />} />/>\n        </Switch>\n        </div>\n      </PersistGate >\n  </Provider>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}