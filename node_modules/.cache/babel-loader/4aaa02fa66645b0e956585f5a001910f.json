{"ast":null,"code":"import _slicedToArray from \"/home/mayor/gidiShare2/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mayor/gidiShare2/frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Provider } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport { useStore } from 'react-redux';\nimport SignupForm from './components/signupModal';\nimport ImageDetails from './screen/ImageDetails';\nimport UploadScreen from './screen/UploadScreen';\nimport LoginForm from './components/Login';\nimport UploadForm from './components/UploadForm';\nimport Loading from './components/Loading';\nimport './styles/App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ImageList from '../src/screen/ImageList'; //import auth from './redux/reducer/authReducer'\n\nfunction App() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        openLoginModal = _useState2[0],\n        setOpenLogininModal = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        openSignupModal = _useState4[0],\n        setOpenSignupModal = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        openUploadFormModal = _useState6[0],\n        setOpenUploadFormModal = _useState6[1];\n\n  const auth = store.getState().auth.isAuth;\n\n  const handleLoginModal = () => {\n    if (openLoginModal) {\n      setOpenLogininModal(false);\n    } else {\n      setOpenLogininModal(true);\n    }\n  };\n\n  const handleSignupModal = () => {\n    if (openSignupModal) {\n      setOpenSignupModal(false);\n    } else {\n      setOpenSignupModal(true);\n    }\n  };\n\n  const handleUploadModal = () => {\n    if (openUploadFormModal) {\n      setOpenUploadFormModal(false);\n    } else {\n      setOpenUploadFormModal(true);\n    }\n  };\n\n  const signout = () => {\n    persistor.purge();\n  };\n\n  let loginAndSignup = React.createElement(\"div\", {\n    className: \"logout-and-signin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"login nav-box\",\n    onClick: handleLoginModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"li\", {\n    className: \"sign-up nav-box\",\n    onClick: handleSignupModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Signup\")));\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(PersistGate, {\n    loading: React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }),\n    persistor: persistor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mayor/gidiShare2/frontend/src/App.js"],"names":["React","useState","useEffect","Provider","NavLink","PersistGate","store","persistor","useStore","SignupForm","ImageDetails","UploadScreen","LoginForm","UploadForm","Loading","BrowserRouter","Router","Switch","Route","ImageList","App","openLoginModal","setOpenLogininModal","openSignupModal","setOpenSignupModal","openUploadFormModal","setOpenUploadFormModal","auth","getState","isAuth","handleLoginModal","handleSignupModal","handleUploadModal","signout","purge","loginAndSignup"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,SAAQC,WAAR,QAA0B,iCAA1B;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,eAA/B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAIA,OAAO,kBAAP;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,QAIO,kBAJP;AAKA,OAAOC,SAAP,MAAsB,yBAAtB,C,CACA;;AAGA,SAASC,GAAT,GAAe;AAAA,oBAEiCnB,QAAQ,CAAC,KAAD,CAFzC;AAAA;AAAA,QAENoB,cAFM;AAAA,QAEUC,mBAFV;;AAAA,qBAGiCrB,QAAQ,CAAC,KAAD,CAHzC;AAAA;AAAA,QAGNsB,eAHM;AAAA,QAGWC,kBAHX;;AAAA,qBAIyCvB,QAAQ,CAAC,KAAD,CAJjD;AAAA;AAAA,QAINwB,mBAJM;AAAA,QAIeC,sBAJf;;AAMb,QAAMC,IAAI,GAAGrB,KAAK,CAACsB,QAAN,GAAiBD,IAAjB,CAAsBE,MAAnC;;AAEA,QAAMC,gBAAgB,GAAG,MAAK;AAC5B,QAAGT,cAAH,EAAkB;AAChBC,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,KAFD,MAEK;AAACA,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AAA0B;AACjC,GAJD;;AAMA,QAAMS,iBAAiB,GAAG,MAAK;AAC7B,QAAGR,eAAH,EAAmB;AACjBC,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AAED,KAHD,MAGK;AAACA,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AAAyB;AAChC,GALD;;AAOA,QAAMQ,iBAAiB,GAAG,MAAK;AAC7B,QAAGP,mBAAH,EAAuB;AACrBC,MAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACD,KAFD,MAEK;AACLA,MAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACC;AACF,GAND;;AAQA,QAAMO,OAAO,GAAG,MAAI;AAClB1B,IAAAA,SAAS,CAAC2B,KAAV;AACD,GAFD;;AAIA,MAAIC,cAAc,GAAI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,SAAS,EAAC,eAAd;AAA8B,IAAA,OAAO,EAAEL,gBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,EAEA;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAgC,IAAA,OAAO,EAAEC,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,CADoB,CAAtB;AAOA,SAEE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEzB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB;AAAmC,IAAA,SAAS,EAAEC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF;AASD;;AAED,eAAea,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {Provider} from 'react-redux'\nimport {NavLink} from 'react-router-dom'\nimport {PersistGate} from 'redux-persist/integration/react'\nimport {store, persistor} from './redux/store'\nimport {useStore} from 'react-redux'\nimport SignupForm from './components/signupModal'\nimport ImageDetails from './screen/ImageDetails'\nimport UploadScreen from './screen/UploadScreen'\nimport LoginForm from './components/Login'\nimport UploadForm from './components/UploadForm'\nimport Loading from './components/Loading'\n\n\n\nimport './styles/App.css'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport ImageList from '../src/screen/ImageList'\n//import auth from './redux/reducer/authReducer'\n\n\nfunction App() {\n\n  const [openLoginModal, setOpenLogininModal] = useState(false)\n  const [openSignupModal, setOpenSignupModal] = useState(false)\n  const [openUploadFormModal, setOpenUploadFormModal] = useState(false)\n\n  const auth = store.getState().auth.isAuth\n\n  const handleLoginModal = () =>{\n    if(openLoginModal){\n      setOpenLogininModal(false)\n    }else{setOpenLogininModal(true)}\n  }\n\n  const handleSignupModal = () =>{\n    if(openSignupModal){\n      setOpenSignupModal(false)\n\n    }else{setOpenSignupModal(true)}\n  }\n\n  const handleUploadModal = () =>{\n    if(openUploadFormModal){\n      setOpenUploadFormModal(false)\n    }else{\n    setOpenUploadFormModal(true)\n    }\n  }\n\n  const signout = ()=>{\n    persistor.purge()\n  }\n\n  let loginAndSignup = (<div className='logout-and-signin'>\n    <ul>\n    <li className=\"login nav-box\" onClick={handleLoginModal}>Login</li>\n    <li className=\"sign-up nav-box\" onClick={handleSignupModal}>Signup</li>\n    </ul>\n  </div>)\n\n  return (\n    \n    <Provider store={store}>\n      <PersistGate loading={<Loading />} persistor={persistor}>\n       \n     \n      </PersistGate >\n  </Provider>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}