{"ast":null,"code":"var _jsxFileName = \"/home/mayor/gidiShare2/frontend/src/components/UploadForm.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport Loading from './Loading';\nimport '../styles/signup.css';\nimport uploadThunk from '../redux/action/uploadThunk';\n\nconst UploadImage = ({\n  handleSignup\n}) => {\n  const dispatch = useDispatch();\n  const SingleData = useSelector(store => store.singleImage);\n  const token = useSelector(store => store.auth.token);\n  const error = SingleData.error,\n        success = SingleData.success,\n        loading = SingleData.loading;\n\n  const validate = values => {\n    const errors = {};\n\n    if (!values.category) {\n      errors.category = 'Category is required';\n    } else if (!values.description) {\n      errors.description = 'Password is required';\n    } else if (!values.image) {\n      errors.image = 'Image is required';\n    } else if (values.image) {\n      const imageExt = values.image.name.split('.');\n      const ext = imageExt[imageExt.length - 1];\n      const supportedFormat = ['png', 'jpg', 'jpeg'];\n\n      if (!supportedFormat.includes(ext)) {\n        errors.image = \"The uploaded image is not in a supported image format. Only png, jpg or jpeg\";\n      }\n    }\n\n    return errors;\n  };\n\n  useEffect(() => {\n    if (success) {\n      React.createElement(Redirect, {\n        to: \"/details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    }\n  }, [success]);\n\n  if (success) {\n    return React.createElement(Redirect, {\n      to: \"/details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(Formik, {\n      initialValues: {\n        password: '',\n        username: '',\n        image: null\n      },\n      validate: validate,\n      onSubmit: values => dispatch(uploadThunk(values.image, values.description, values.category, token)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, props => React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form_control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Upload Photo\"), React.createElement(\"form\", {\n      onSubmit: props.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"username-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-user icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Pick your favorite flavor:\", React.createElement(\"select\", {\n      name: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"love\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Love\"), React.createElement(\"option\", {\n      value: \"celebration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Celebration\"), React.createElement(\"option\", {\n      value: \"happiness\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Happiness\"), React.createElement(\"option\", {\n      value: \"sadness\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Sadness\"), React.createElement(\"option\", {\n      value: \"throwback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"ThrowBack\"), React.createElement(\"option\", {\n      value: \"general\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"General\"))), React.createElement(\"div\", {\n      className: \"form-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, props.touched.category && props.errors.category ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, props.errors.category) : null)), React.createElement(\"div\", {\n      className: \"password-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      name: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"image caption here...\")), React.createElement(\"div\", {\n      className: \"form-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, props.touched.description && props.errors.description ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, props.errors.description) : null), React.createElement(\"div\", {\n      className: \"image-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-upload icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"image\",\n      className: \"customed-upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"image\",\n      name: \"image\",\n      type: \"file\",\n      onChange: event => {\n        props.setFieldValue(\"image\", event.currentTarget.files[0]);\n      },\n      onBlur: props.handleBlur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"upload-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Upload image\"))), React.createElement(\"div\", {\n      className: \"form-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, props.touched.image && props.errors.image ? props.errors.image : null, props.values.image && React.createElement(\"div\", {\n      className: \"image-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, props.values.image.name)), React.createElement(\"div\", {\n      className: \"cancel-signup-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cancel-signup\",\n      onClick: handleSignup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"button\", {\n      className: \"signup-submit\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, loading ? React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }) : 'Submit'))), error && React.createElement(\"div\", {\n      className: \"reducer-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, error))));\n  }\n};\n\nexport default UploadImage;","map":{"version":3,"sources":["/home/mayor/gidiShare2/frontend/src/components/UploadForm.js"],"names":["React","useEffect","useDispatch","useSelector","Redirect","Formik","Loading","uploadThunk","UploadImage","handleSignup","dispatch","SingleData","store","singleImage","token","auth","error","success","loading","validate","values","errors","category","description","image","imageExt","name","split","ext","length","supportedFormat","includes","password","username","props","handleSubmit","touched","event","setFieldValue","currentTarget","files","handleBlur"],"mappings":"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","sourcesContent":["import React, { useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nimport {Formik} from 'formik'\nimport Loading from './Loading'\nimport '../styles/signup.css'\nimport uploadThunk from '../redux/action/uploadThunk'\n\nconst UploadImage = ({handleSignup}) => {\n   const dispatch = useDispatch()\n   const SingleData = useSelector(store => store.singleImage)\n   const token = useSelector(store => store.auth.token)\n   const {error, success, loading} = SingleData\n\n    const validate = values => {\n        const errors = {}\n        \n        if(!values.category){\n                errors.category = 'Category is required'\n            }else if(!values.description){\n                errors.description = 'Password is required'\n            }else if(!values.image){\n                errors.image = 'Image is required'\n            }else if(values.image){\n                const imageExt = values.image.name.split('.')\n                const ext = imageExt[imageExt.length-1]\n                const supportedFormat = ['png', 'jpg', 'jpeg']\n                if(!supportedFormat.includes(ext)){\n                errors.image = \"The uploaded image is not in a supported image format. Only png, jpg or jpeg\"\n                }\n        }\n\n        return errors\n    }\n\n    useEffect(() => {\n        if(success){\n            <Redirect to=\"/details\" />\n        }\n    }, [success])\n\n    if(success){\n        return <Redirect to='/details' />\n    }else{\n    return (\n    <Formik\n        initialValues = {{\n            password: '',\n            username: '',\n            image: null\n        }}\n        validate = {validate}\n        onSubmit= {values => dispatch(uploadThunk(values.image, values.description, values.category, token))}\n        >\n        \n        {props => (\n        <div className=\"form-wrapper\">\n        <div className=\"form_control\">\n\n            <div className='signup'>Upload Photo</div>\n            \n            <form onSubmit={props.handleSubmit}>\n                <div className='username-wrapper'>\n                    <i className=\"fa fa-user icon\"></i>\n                    <label>\n                        Pick your favorite flavor:\n                        <select name=\"category\">\n                            <option value=\"love\">Love</option>\n                            <option value=\"celebration\">Celebration</option>\n                            <option value=\"happiness\">Happiness</option>\n                            <option value=\"sadness\">Sadness</option>\n                            <option value='throwback'>ThrowBack</option>\n                            <option value=\"general\">General</option>\n                        </select>\n                        </label>\n\n                <div className='form-error'>\n                    {props.touched.category && props.errors.category ? \n                    (<div>{props.errors.category}</div>): null}\n                </div>\n                </div>\n\n                <div className='password-wrapper'>\n                    <label htmlFor='description' />\n                   <textarea name=\"description\">\n                        image caption here...\n                   </textarea>\n                </div>\n                <div className='form-error'>\n                    {props.touched.description && props.errors.description ? (\n                        <div>{props.errors.description}</div>\n                    ): null}\n                </div>\n\n                <div className='image-wrapper'>\n                    <i className=\"fas fa-upload icon\"></i>\n                    <label htmlFor='image' className='customed-upload'>\n                    <input\n                        id='image'\n                        name='image'\n                        type='file'\n                        onChange={(event) =>{\n                            props.setFieldValue(\"image\", event.currentTarget.files[0]);\n                        }}\n                        onBlur={props.handleBlur}\n                    />\n                    <div className='upload-label'>Upload image</div>\n\n                    </label>\n                   \n                </div>\n                <div className='form-error'>\n                {props.touched.image && props.errors.image ? \n                props.errors.image : null }\n                \n                {props.values.image && (<div className='image-name'>{props.values.image.name}</div>)}\n                </div>\n                <div className='cancel-signup-wrapper'>\n                    <div className='cancel-signup' onClick={handleSignup}>Cancel</div>\n                    <button className='signup-submit' type='submit'>{loading ? <Loading /> : 'Submit'}</button>\n                  \n                </div>\n            </form>\n            {error && (<div className='reducer-error'>{error}</div>)}\n        </div>\n    </div>\n        )}\n    </Formik>\n    )\n                }\n}\n\nexport default UploadImage"]},"metadata":{},"sourceType":"module"}