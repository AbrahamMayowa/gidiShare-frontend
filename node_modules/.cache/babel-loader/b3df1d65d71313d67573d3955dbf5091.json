{"ast":null,"code":"var _jsxFileName = \"/home/mayor/gidiShare2/frontend/src/components/UploadForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport Loading from './Loading';\nimport '../styles/signup.css';\nimport uploadThunk from '../redux/action/uploadThunk';\n\nconst UploadImage = ({\n  handleUpload\n}) => {\n  const dispatch = useDispatch();\n  const SingleData = useSelector(store => store.singleImage);\n  const token = useSelector(store => store.auth.token);\n  const error = SingleData.error,\n        success = SingleData.success,\n        loading = SingleData.loading;\n\n  const validate = values => {\n    const errors = {};\n\n    if (!values.category) {\n      errors.category = 'Category is required';\n    } else if (!values.description) {\n      errors.description = 'Image description is required';\n    } else if (!values.image) {\n      errors.image = 'Image is required';\n    } else if (values.image) {\n      const imageExt = values.image.name.split('.');\n      const ext = imageExt[imageExt.length - 1];\n      const supportedFormat = ['png', 'jpg', 'jpeg'];\n\n      if (!supportedFormat.includes(ext)) {\n        errors.image = \"The uploaded image is not in a supported image format. Only png, jpg or jpeg\";\n      }\n    }\n\n    return errors;\n  }; //if(success){\n  // return <Redirect to='/details' />\n  //  }else{\n\n\n  return React.createElement(Formik, {\n    initialValues: {\n      category: '',\n      description: '',\n      image: null\n    },\n    validate: validate,\n    onSubmit: values => {\n      dispatch(uploadThunk(values.image, values.description, values.category, token));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, props => React.createElement(\"div\", {\n    className: \"form-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form_control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Upload Photo\"), React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"username-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-user icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Pick your favorite flavor:\", React.createElement(\"select\", {\n    name: \"category\",\n    onChange: props.handleChange,\n    onBlur: props.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"love\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Love\"), React.createElement(\"option\", {\n    value: \"celebration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Celebration\"), React.createElement(\"option\", {\n    value: \"happiness\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Happiness\"), React.createElement(\"option\", {\n    value: \"sadness\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Sadness\"), React.createElement(\"option\", {\n    value: \"throwback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"ThrowBack\"), React.createElement(\"option\", {\n    value: \"general\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"General\"))), React.createElement(\"div\", {\n    className: \"form-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, props.touched.category && props.errors.category ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, props.errors.category) : null)), React.createElement(\"div\", {\n    className: \"password-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    name: \"description\",\n    onChange: props.handleChange,\n    onBlur: props.handleBlur,\n    values: props.values.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"image caption here...\")), React.createElement(\"div\", {\n    className: \"form-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, props.touched.description && props.errors.description ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, props.errors.description) : null), React.createElement(\"div\", {\n    className: \"image-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-upload icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"image\",\n    className: \"customed-upload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"image\",\n    name: \"image\",\n    type: \"file\",\n    onChange: event => props.setFieldValue(\"image\", event.currentTarget.files[0]),\n    onBlur: props.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"upload-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Upload image\"))), React.createElement(\"div\", {\n    className: \"form-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, props.touched.image && props.errors.image ? props.errors.image : null, props.values.image && React.createElement(\"div\", {\n    className: \"image-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, props.values.image.name)), React.createElement(\"div\", {\n    className: \"cancel-signup-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cancel-signup\",\n    onClick: handleUpload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(\"button\", {\n    className: \"signup-submit\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, loading ? React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }) : 'Submit'))), error && React.createElement(\"div\", {\n    className: \"reducer-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, error))));\n};\n\nexport default UploadImage;","map":{"version":3,"sources":["/home/mayor/gidiShare2/frontend/src/components/UploadForm.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Redirect","Formik","Loading","uploadThunk","UploadImage","handleUpload","dispatch","SingleData","store","singleImage","token","auth","error","success","loading","validate","values","errors","category","description","image","imageExt","name","split","ext","length","supportedFormat","includes","props","handleSubmit","handleChange","handleBlur","touched","event","setFieldValue","currentTarget","files"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nimport {Formik} from 'formik'\nimport Loading from './Loading'\nimport '../styles/signup.css'\nimport uploadThunk from '../redux/action/uploadThunk'\n\nconst UploadImage = ({handleUpload}) => {\n   const dispatch = useDispatch()\n   const SingleData = useSelector(store => store.singleImage)\n   const token = useSelector(store => store.auth.token)\n   const {error, success, loading} = SingleData\n\n\n    const validate = values => {\n        const errors = {}\n        \n        if(!values.category){\n                errors.category = 'Category is required'\n            }else if(!values.description){\n                errors.description = 'Image description is required'\n            }else if(!values.image){\n                errors.image = 'Image is required'\n            }else if(values.image){\n                const imageExt = values.image.name.split('.')\n                const ext = imageExt[imageExt.length-1]\n                const supportedFormat = ['png', 'jpg', 'jpeg']\n                if(!supportedFormat.includes(ext)){\n                errors.image = \"The uploaded image is not in a supported image format. Only png, jpg or jpeg\"\n                }\n        }\n\n        return errors\n    }\n\n    //if(success){\n       // return <Redirect to='/details' />\n  //  }else{\n    return (\n    <Formik\n        initialValues = {{\n            category: '',\n            description: '',\n            image: null\n        }}\n        validate = {validate}\n        onSubmit= {values => {\n            dispatch(uploadThunk(values.image, values.description, values.category, token))}\n        }\n        >\n        \n        {props => (\n        <div className=\"form-wrapper\">\n        <div className=\"form_control\">\n\n            <div className='signup'>Upload Photo</div>\n            \n            <form onSubmit={props.handleSubmit}>\n                <div className='username-wrapper'>\n                    <i className=\"fa fa-user icon\"></i>\n                    <label>\n                        Pick your favorite flavor:\n                        <select name=\"category\" \n                            onChange={props.handleChange}\n                            onBlur={props.handleBlur}\n                         >\n                            <option value=\"love\">Love</option>\n                            <option value=\"celebration\">Celebration</option>\n                            <option value=\"happiness\">Happiness</option>\n                            <option value=\"sadness\">Sadness</option>\n                            <option value='throwback'>ThrowBack</option>\n                            <option value=\"general\">General</option>\n                        </select>\n                        </label>\n\n                <div className='form-error'>\n                    {props.touched.category && props.errors.category ? \n                    (<div>{props.errors.category}</div>): null}\n                </div>\n                </div>\n\n                <div className='password-wrapper'>\n                    <label htmlFor='description' />\n                   <textarea name=\"description\"\n                        onChange={props.handleChange}\n                        onBlur={props.handleBlur}\n                        values={props.values.description\n                        }>\n                        image caption here...\n                   </textarea>\n                </div>\n                <div className='form-error'>\n                    {props.touched.description && props.errors.description ? (\n                        <div>{props.errors.description}</div> \n                    ): null}\n                </div>\n\n                <div className='image-wrapper'>\n                    <i className=\"fas fa-upload icon\"></i>\n                    <label htmlFor='image' className='customed-upload'>\n                    <input\n                        id='image'\n                        name='image'\n                        type='file'\n                        onChange={(event) => props.setFieldValue(\"image\", event.currentTarget.files[0])}\n                        onBlur={props.handleBlur}\n                    />\n                    <div className='upload-label'>Upload image</div>\n\n                    </label>\n                   \n                </div>\n                <div className='form-error'>\n                {props.touched.image && props.errors.image ? \n                props.errors.image : null }\n                \n                {props.values.image && (<div className='image-name'>{props.values.image.name}</div>)}\n                </div>\n                <div className='cancel-signup-wrapper'>\n                    <div className='cancel-signup' onClick={handleUpload}>Cancel</div>\n                    <button className='signup-submit' type='submit'>{loading ? <Loading /> : 'Submit'}</button>\n                  \n                </div>\n            </form>\n            {error && (<div className='reducer-error'>{error}</div>)}\n        </div>\n    </div>\n        )}\n    </Formik>\n    )\n}\n\nexport default UploadImage"]},"metadata":{},"sourceType":"module"}