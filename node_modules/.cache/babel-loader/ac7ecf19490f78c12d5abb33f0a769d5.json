{"ast":null,"code":"var _jsxFileName = \"/home/mayor/gidiShare2/frontend/src/components/ImageCard.js\";\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport '../styles/imageCard.css';\nimport moment from 'moment';\n\nconst ImageCard = props => {\n  const authError = useSelector(store => store.images.error);\n  useEffect(() => {\n    if (authError === 'You are not authorized') {\n      props.handleLogin();\n    }\n  }, [authError]);\n\n  const handleThumpDown = e => {};\n\n  const handleThumpUp = e;\n  const image = props.image;\n  const userId = props.userId;\n  const createdTime = new Date().toDateString(image.createdAt);\n  const momentTime = moment(createdTime).fromNow();\n  let thumpUpUser = null;\n  let thumpDownUser = null; // check if user is authenticated to know if the user had thumped the image\n\n  if (userId && image) {\n    // only thumped up image is looped\n    if (image.thumpup.thumpUpCount > 0) {\n      thumpUpUser = image.thumpup.userActionThumpUp.find(id => id === userId);\n    }\n\n    if (image.thumpdown.thumpDownCount > 0) {\n      thumpDownUser = image.thumpdown.userActionThumpDown.find(id => id === userId);\n    }\n  }\n\n  return React.createElement(\"div\", {\n    key: image.imageId,\n    className: 'card-wrapper ' + (props.isDetailsCard && 'details_card'),\n    onClick: () => {\n      if (props.detailsRedirect) {\n        props.detailsRedirect(image.imageId);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"creator\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"creator-image-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: `http://localhost:5000/static/${image.creator.imageUrl}`,\n    alt: \"creator\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, image.creator.username)), React.createElement(\"section\", {\n    className: \"image-url\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: `http://localhost:5000/static/${image.imageUrl}`,\n    alt: \"share\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"section\", {\n    className: \"data-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"thump\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"thump-up-wrapper thump\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"far fa-thumbs-up thumpup-icon \" + (thumpUpUser ? 'thumped' : null),\n    onClick: e => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: 'thump-count ' + (thumpUpUser ? 'thumped' : null),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, image.thumpUp.thumpUpCount)), React.createElement(\"div\", {\n    className: \"thump-down-wrapper thump\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"far fa-thumbs-down thumpdown-icon \" + (thumpUpUser ? 'thumped' : null),\n    onClick: () => props.handleThumpDown(image.imageId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: 'thump-count ' + (thumpDownUser ? 'thumped' : null),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, image.thumpDown.thumpDownCount))), React.createElement(\"div\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, image.description)), React.createElement(\"div\", {\n    className: \"time-category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"moment-time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, momentTime), React.createElement(\"div\", {\n    className: \"category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, image.category)));\n};\n\nexport default ImageCard;","map":{"version":3,"sources":["/home/mayor/gidiShare2/frontend/src/components/ImageCard.js"],"names":["React","useEffect","useSelector","moment","ImageCard","props","authError","store","images","error","handleLogin","handleThumpDown","e","handleThumpUp","image","userId","createdTime","Date","toDateString","createdAt","momentTime","fromNow","thumpUpUser","thumpDownUser","thumpup","thumpUpCount","userActionThumpUp","find","id","thumpdown","thumpDownCount","userActionThumpDown","imageId","isDetailsCard","detailsRedirect","creator","imageUrl","username","thumpUp","thumpDown","description","category"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\nimport {useSelector} from 'react-redux'\nimport '../styles/imageCard.css'\nimport moment from 'moment'\n\n\nconst ImageCard = (props) =>{\n    const authError = useSelector(store => store.images.error)\n    useEffect(()=>{\n        if(authError === 'You are not authorized'){\n            props.handleLogin()\n        }\n    }, [authError])\n\n    const handleThumpDown = (e)=>{\n\n    }\n\n    const handleThumpUp= (e)\n\n\n    const image = props.image\n    const userId = props.userId\n    const createdTime = new Date().toDateString(image.createdAt)\n    const momentTime = moment(createdTime).fromNow()\n    let thumpUpUser = null\n    let thumpDownUser = null\n\n    // check if user is authenticated to know if the user had thumped the image\n    if(userId && image){\n        // only thumped up image is looped\n        if(image.thumpup.thumpUpCount > 0){\n            thumpUpUser = image.thumpup.userActionThumpUp.find(id => id === userId)\n        }\n\n        if(image.thumpdown.thumpDownCount > 0){\n            thumpDownUser = image.thumpdown.userActionThumpDown.find(id => id === userId)\n        }\n    }\n    return(\n            <div key={image.imageId} className={'card-wrapper ' + (props.isDetailsCard && 'details_card' )} onClick={() => {\n                if(props.detailsRedirect){\n                    props.detailsRedirect(image.imageId)\n                }\n                    \n            }\n            }\n            >\n                 <section className='creator'>\n                    <div className='creator-image-wrapper'>\n                        <img src={`http://localhost:5000/static/${image.creator.imageUrl}`} alt='creator'/> \n                    </div>\n                    <div className='username'>{image.creator.username}</div>\n                </section>\n                    \n                <section className='image-url'>\n                    <img src={`http://localhost:5000/static/${image.imageUrl}`} alt=\"share\"/>\n                </section>\n\n                <section className='data-description'>\n                    <div className='thump'>\n                        <div className='thump-up-wrapper thump'>\n                        <i className={\"far fa-thumbs-up thumpup-icon \" + (thumpUpUser ? 'thumped' : null)}\n                        onClick={(e) => {\n                            \n                        }}></i>\n                        <div className={'thump-count ' + (thumpUpUser ? 'thumped' : null)}>\n                            {image.thumpUp.thumpUpCount}\n                        </div>\n\n                        </div>\n                        <div className=\"thump-down-wrapper thump\">\n                        <i class={\"far fa-thumbs-down thumpdown-icon \" + (thumpUpUser ? 'thumped' : null)}\n                        onClick={() => props.handleThumpDown(image.imageId)}></i>\n                        <div className={'thump-count ' + (thumpDownUser ? 'thumped' : null)}>\n                        {image.thumpDown.thumpDownCount}\n                        </div>\n                        </div>\n\n                    </div>\n\n                    <div className='description'>\n                        {image.description}\n                    </div>\n                \n                </section>\n                <div className='time-category'>\n                        <div className='moment-time'>{momentTime}</div>\n                        <div className='category'>{image.category}</div>\n                </div>\n            </div>\n        )\n}\n\nexport default ImageCard"]},"metadata":{},"sourceType":"module"}