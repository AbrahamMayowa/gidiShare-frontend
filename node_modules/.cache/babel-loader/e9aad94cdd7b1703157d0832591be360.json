{"ast":null,"code":"var _jsxFileName = \"/home/mayor/gidiShare2/frontend/src/screen/ImageList.js\";\nimport React from 'react';\nimport ImageCard from '../components/ImageCard';\nimport Header from '../components/HeaderSection';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport NoItem from '../components/NoItem';\nimport imageListThunk from '../redux/action/imageListActionThunk';\nimport thumpThunk from '../redux/action/thumpThunk';\nimport '../styles/imageList.css';\n\nclass Images extends React.Component {\n  constructor(props) {\n    super(props);\n    this.token = this.props.auth.token;\n  }\n\n  componentDidMount() {\n    const authError = this.props.images.error;\n    this.props.dispatch(imageListThunk());\n\n    if (authError === 'You are not authorized') {\n      this.props.handleLogin();\n    }\n  }\n\n  handleThumpUp(imageId) {\n    if (!this.token) {\n      this.props.handleLogin();\n    } else {\n      this.props.dispatch(thumpThunk(imageId, this.token));\n    }\n  }\n\n  handleThumpDown(imageId, token = this.props.auth.token) {\n    if (!this.token) {\n      this.props.handleLogin();\n    } else {\n      this.props.dispatch(thumpThunk(imageId, token, false));\n    }\n  }\n\n  render() {\n    const _this$props$images = this.props.images,\n          images = _this$props$images.images,\n          loading = _this$props$images.loading;\n    const imageUrl = this.props.auth.imageUrl;\n    let noImageOrImageCard = React.createElement(NoItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n\n    if (images.length > 0) {\n      noImageOrImageCard = images.map(image => React.createElement(ImageCard, {\n        image: image,\n        handleThumpUp: () => this.handleThumpUp,\n        handleThumpDown: this.handleThumpDown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"card-session\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), loading ? React.createElement(\"div\", {\n      className: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })) : noImageOrImageCard));\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    auth: state.auth,\n    images: state.images\n  };\n};\n\nexport default withRouter(connect(mapState)(Images));","map":{"version":3,"sources":["/home/mayor/gidiShare2/frontend/src/screen/ImageList.js"],"names":["React","ImageCard","Header","connect","withRouter","Loading","NoItem","imageListThunk","thumpThunk","Images","Component","constructor","props","token","auth","componentDidMount","authError","images","error","dispatch","handleLogin","handleThumpUp","imageId","handleThumpDown","render","loading","imageUrl","noImageOrImageCard","length","map","image","mapState","state"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ImageCard from '../components/ImageCard'\nimport Header from '../components/HeaderSection'\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router-dom'\nimport Loading from '../components/Loading'\nimport NoItem from '../components/NoItem'\nimport imageListThunk from '../redux/action/imageListActionThunk'\nimport thumpThunk from '../redux/action/thumpThunk'\nimport '../styles/imageList.css'\n\n\n\nclass Images extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.token = this.props.auth.token\n    }\n\n\n    componentDidMount(){\n        const authError = this.props.images.error\n        this.props.dispatch(imageListThunk())\n\n        if(authError === 'You are not authorized'){\n            this.props.handleLogin()\n        }\n    }\n\n\n    handleThumpUp(imageId){\n        \n        if(!this.token){\n            this.props.handleLogin()\n        }else{\n            this.props.dispatch(thumpThunk(imageId, this.token))\n        }\n    }\n\n\n\n    handleThumpDown(imageId, token=this.props.auth.token){\n        if(!this.token){\n            this.props.handleLogin()\n        }else{\n            this.props.dispatch(thumpThunk(imageId, token, false))\n        }\n\n    }\n\n    render(){\n        const {images, loading} = this.props.images\n        const {imageUrl} = this.props.auth\n\n        let noImageOrImageCard = <NoItem />\n\n        if(images.length > 0){\n            noImageOrImageCard = images.map(image => <ImageCard image={image} handleThumpUp={() => this.handleThumpUp} handleThumpDown={this.handleThumpDown}/>)\n        }\n\n        return (\n        <div>\n            <section className='card-session'>\n                <Header />\n                {loading ? <div className='loading'><Loading /></div> : noImageOrImageCard}\n            </section>\n            </div>\n\n        )\n    }\n\n}\n\nconst mapState = (state) => {\n    return {\n        auth: state.auth,\n        images: state.images\n\n    }\n}\n\nexport default withRouter(connect(mapState)(Images))"]},"metadata":{},"sourceType":"module"}